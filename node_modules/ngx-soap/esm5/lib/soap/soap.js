/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/*
 * Copyright (c) 2011 Vinay Pulim <vinay@milewise.com>
 * MIT Licensed
 */
import * as tslib_1 from "tslib";
import * as wsdl from './wsdl';
import { security } from './security';
import { Client } from './client';
export { Client } from './client';
export { security } from './security';
export var /** @type {?} */ WSDL = wsdl.WSDL;
/**
 * @return {?}
 */
function createCache() {
    var /** @type {?} */ cache = {};
    return function (key, load, callback) {
        if (!cache[key]) {
            load(function (err, result) {
                if (err) {
                    return callback(err);
                }
                cache[key] = result;
                callback(null, result);
            });
        }
        else {
            // process.nextTick(function () {
            //   callback(null, cache[key]);
            // });
            Promise.resolve(true).then(function () { return callback(null, cache[key]); });
        }
    };
}
var /** @type {?} */ getFromCache = createCache();
/**
 * @param {?} url
 * @param {?} options
 * @return {?}
 */
function _requestWSDL(url, options) {
    // if (typeof options === 'function') {
    //   callback = options;
    //   options = {};
    // }
    return wsdl.open_wsdl(url, options);
    // const openWsdl = wsdl.open_wsdl.bind(null, url, options);
    // if (options.disableCache === true) {
    //   openWsdl(callback);
    // } else {
    //   getFromCache(url, openWsdl, callback);
    // }
}
/**
 * @param {?} url
 * @param {?} options
 * @param {?} endpoint
 * @return {?}
 */
export function createClient(url, options, endpoint) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var wsdl, client;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    // if (typeof options === 'function') {
                    //   endpoint = callback;
                    //   callback = options;
                    //   options = {};
                    // }
                    if (typeof options === 'undefined') {
                        options = {};
                    }
                    console.log("createClient", options);
                    endpoint = options.endpoint || endpoint;
                    return [4 /*yield*/, _requestWSDL(url, options)];
                case 1:
                    wsdl = _a.sent();
                    client = new Client(wsdl, endpoint, options);
                    return [2 /*return*/, client];
            }
        });
    });
}
// export function createClientAsync(url, options, endpoint): Observable<any> {
//   if (typeof options === 'undefined') {
//     options = {};
//   }
//   console.log("createClientAsync", options)
//   return createClient(url, options, endpoint);
// }
// export function listen(server, pathOrOptions, services, xml) {
//   let options: any = {},
//     path = pathOrOptions,
//     uri = '';
//   if (typeof pathOrOptions === 'object') {
//     options = pathOrOptions;
//     path = options.path;
//     services = options.services;
//     xml = options.xml;
//     uri = options.uri;
//   }
//   const wsdl = new WSDL(xml || services, uri, options);
//   return new Server(server, path, services, wsdl, options);
// }
export var /** @type {?} */ BasicAuthSecurity = security.BasicAuthSecurity;
export var /** @type {?} */ NTLMSecurity = security.NTLMSecurity;
export var /** @type {?} */ WSSecurity = security.WSSecurity;
export var /** @type {?} */ WSSecurityCert = security.WSSecurityCert;
export var /** @type {?} */ ClientSSLSecurity = security.ClientSSLSecurity;
export var /** @type {?} */ ClientSSLSecurityPFX = security.ClientSSLSecurityPFX;
export var /** @type {?} */ BearerSecurity = security.BearerSecurity;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29hcC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1zb2FwLyIsInNvdXJjZXMiOlsibGliL3NvYXAvc29hcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFLQSxPQUFPLEtBQUssSUFBSSxNQUFNLFFBQVEsQ0FBQztBQUMvQixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDbEMsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUNsQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3RDLE1BQU0sQ0FBQyxxQkFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQzs7OztBQUc5QjtJQUNFLHFCQUFNLEtBQUssR0FBRyxFQUFFLENBQUM7SUFDakIsTUFBTSxDQUFDLFVBQVUsR0FBRyxFQUFFLElBQUksRUFBRSxRQUFRO1FBQ2xDLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQixJQUFJLENBQUMsVUFBVSxHQUFHLEVBQUUsTUFBTTtnQkFDeEIsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDUixNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2lCQUN0QjtnQkFDRCxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsTUFBTSxDQUFDO2dCQUNwQixRQUFRLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDO2FBQ3hCLENBQUMsQ0FBQztTQUNKO1FBQUMsSUFBSSxDQUFDLENBQUM7Ozs7WUFJTixPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFNLE9BQUEsUUFBUSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBMUIsQ0FBMEIsQ0FBQyxDQUFDO1NBQzlEO0tBQ0YsQ0FBQztDQUNIO0FBQ0QscUJBQU0sWUFBWSxHQUFHLFdBQVcsRUFBRSxDQUFDOzs7Ozs7QUFFbkMsc0JBQXNCLEdBQUcsRUFBRSxPQUFPOzs7OztJQU1oQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLENBQUM7Ozs7Ozs7Q0FRckM7Ozs7Ozs7QUFFRCxNQUFNLHVCQUE2QixHQUFHLEVBQUUsT0FBTyxFQUFFLFFBQVE7Ozs7Ozs7Ozs7O29CQU12RCxFQUFFLENBQUMsQ0FBQyxPQUFPLE9BQU8sS0FBSyxXQUFXLENBQUMsQ0FBQyxDQUFDO3dCQUNuQyxPQUFPLEdBQUcsRUFBRSxDQUFDO3FCQUNkO29CQUNELE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUFFLE9BQU8sQ0FBQyxDQUFBO29CQUNwQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFFBQVEsSUFBSSxRQUFRLENBQUM7b0JBSzNCLHFCQUFNLFlBQVksQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLEVBQUE7O29CQUF2QyxJQUFJLEdBQUcsU0FBZ0M7b0JBQ3ZDLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDO29CQUNuRCxzQkFBTyxNQUFNLEVBQUM7Ozs7Q0FDZjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCRCxNQUFNLENBQUMscUJBQU0saUJBQWlCLEdBQUcsUUFBUSxDQUFDLGlCQUFpQixDQUFDO0FBQzVELE1BQU0sQ0FBQyxxQkFBTSxZQUFZLEdBQUcsUUFBUSxDQUFDLFlBQVksQ0FBQztBQUNsRCxNQUFNLENBQUMscUJBQU0sVUFBVSxHQUFHLFFBQVEsQ0FBQyxVQUFVLENBQUM7QUFDOUMsTUFBTSxDQUFDLHFCQUFNLGNBQWMsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDO0FBQ3RELE1BQU0sQ0FBQyxxQkFBTSxpQkFBaUIsR0FBRyxRQUFRLENBQUMsaUJBQWlCLENBQUM7QUFDNUQsTUFBTSxDQUFDLHFCQUFNLG9CQUFvQixHQUFHLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQztBQUNsRSxNQUFNLENBQUMscUJBQU0sY0FBYyxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDExIFZpbmF5IFB1bGltIDx2aW5heUBtaWxld2lzZS5jb20+XG4gKiBNSVQgTGljZW5zZWRcbiAqL1xuXG5pbXBvcnQgKiBhcyB3c2RsIGZyb20gJy4vd3NkbCc7XG5pbXBvcnQgeyBzZWN1cml0eSB9IGZyb20gJy4vc2VjdXJpdHknO1xuaW1wb3J0IHsgQ2xpZW50IH0gZnJvbSAnLi9jbGllbnQnO1xuZXhwb3J0IHsgQ2xpZW50IH0gZnJvbSAnLi9jbGllbnQnO1xuZXhwb3J0IHsgc2VjdXJpdHkgfSBmcm9tICcuL3NlY3VyaXR5JztcbmV4cG9ydCBjb25zdCBXU0RMID0gd3NkbC5XU0RMO1xuLy8gZXhwb3J0IGNvbnN0IHBhc3N3b3JkRGlnZXN0ID0gdXRpbHMucGFzc3dvcmREaWdlc3Q7XG5cbmZ1bmN0aW9uIGNyZWF0ZUNhY2hlKCkge1xuICBjb25zdCBjYWNoZSA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gKGtleSwgbG9hZCwgY2FsbGJhY2spIHtcbiAgICBpZiAoIWNhY2hlW2tleV0pIHtcbiAgICAgIGxvYWQoZnVuY3Rpb24gKGVyciwgcmVzdWx0KSB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICByZXR1cm4gY2FsbGJhY2soZXJyKTtcbiAgICAgICAgfVxuICAgICAgICBjYWNoZVtrZXldID0gcmVzdWx0O1xuICAgICAgICBjYWxsYmFjayhudWxsLCByZXN1bHQpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHByb2Nlc3MubmV4dFRpY2soZnVuY3Rpb24gKCkge1xuICAgICAgLy8gICBjYWxsYmFjayhudWxsLCBjYWNoZVtrZXldKTtcbiAgICAgIC8vIH0pO1xuICAgICAgUHJvbWlzZS5yZXNvbHZlKHRydWUpLnRoZW4oKCkgPT4gY2FsbGJhY2sobnVsbCwgY2FjaGVba2V5XSkpO1xuICAgIH1cbiAgfTtcbn1cbmNvbnN0IGdldEZyb21DYWNoZSA9IGNyZWF0ZUNhY2hlKCk7XG5cbmZ1bmN0aW9uIF9yZXF1ZXN0V1NETCh1cmwsIG9wdGlvbnMpIHtcbiAgLy8gaWYgKHR5cGVvZiBvcHRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gIC8vICAgY2FsbGJhY2sgPSBvcHRpb25zO1xuICAvLyAgIG9wdGlvbnMgPSB7fTtcbiAgLy8gfVxuXG4gIHJldHVybiB3c2RsLm9wZW5fd3NkbCh1cmwsIG9wdGlvbnMpO1xuXG4gIC8vIGNvbnN0IG9wZW5Xc2RsID0gd3NkbC5vcGVuX3dzZGwuYmluZChudWxsLCB1cmwsIG9wdGlvbnMpO1xuICAvLyBpZiAob3B0aW9ucy5kaXNhYmxlQ2FjaGUgPT09IHRydWUpIHtcbiAgLy8gICBvcGVuV3NkbChjYWxsYmFjayk7XG4gIC8vIH0gZWxzZSB7XG4gIC8vICAgZ2V0RnJvbUNhY2hlKHVybCwgb3BlbldzZGwsIGNhbGxiYWNrKTtcbiAgLy8gfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlQ2xpZW50KHVybCwgb3B0aW9ucywgZW5kcG9pbnQpOiBQcm9taXNlPGFueT4ge1xuICAvLyBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgLy8gICBlbmRwb2ludCA9IGNhbGxiYWNrO1xuICAvLyAgIGNhbGxiYWNrID0gb3B0aW9ucztcbiAgLy8gICBvcHRpb25zID0ge307XG4gIC8vIH1cbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAndW5kZWZpbmVkJykge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBjb25zb2xlLmxvZyhcImNyZWF0ZUNsaWVudFwiLCBvcHRpb25zKVxuICBlbmRwb2ludCA9IG9wdGlvbnMuZW5kcG9pbnQgfHwgZW5kcG9pbnQ7XG4gIC8vIF9yZXF1ZXN0V1NETCh1cmwsIG9wdGlvbnMsIGZ1bmN0aW9uKGVyciwgd3NkbCkge1xuICAvLyAgIGNhbGxiYWNrKGVyciwgd3NkbCAmJiBuZXcgQ2xpZW50KHdzZGwsIGVuZHBvaW50LCBvcHRpb25zKSk7XG4gIC8vIH0pO1xuXG4gIGNvbnN0IHdzZGwgPSBhd2FpdCBfcmVxdWVzdFdTREwodXJsLCBvcHRpb25zKTtcbiAgY29uc3QgY2xpZW50ID0gbmV3IENsaWVudCh3c2RsLCBlbmRwb2ludCwgb3B0aW9ucyk7XG4gIHJldHVybiBjbGllbnQ7XG59XG5cbi8vIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDbGllbnRBc3luYyh1cmwsIG9wdGlvbnMsIGVuZHBvaW50KTogT2JzZXJ2YWJsZTxhbnk+IHtcbi8vICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAndW5kZWZpbmVkJykge1xuLy8gICAgIG9wdGlvbnMgPSB7fTtcbi8vICAgfVxuLy8gICBjb25zb2xlLmxvZyhcImNyZWF0ZUNsaWVudEFzeW5jXCIsIG9wdGlvbnMpXG4vLyAgIHJldHVybiBjcmVhdGVDbGllbnQodXJsLCBvcHRpb25zLCBlbmRwb2ludCk7XG4vLyB9XG5cbi8vIGV4cG9ydCBmdW5jdGlvbiBsaXN0ZW4oc2VydmVyLCBwYXRoT3JPcHRpb25zLCBzZXJ2aWNlcywgeG1sKSB7XG4vLyAgIGxldCBvcHRpb25zOiBhbnkgPSB7fSxcbi8vICAgICBwYXRoID0gcGF0aE9yT3B0aW9ucyxcbi8vICAgICB1cmkgPSAnJztcblxuLy8gICBpZiAodHlwZW9mIHBhdGhPck9wdGlvbnMgPT09ICdvYmplY3QnKSB7XG4vLyAgICAgb3B0aW9ucyA9IHBhdGhPck9wdGlvbnM7XG4vLyAgICAgcGF0aCA9IG9wdGlvbnMucGF0aDtcbi8vICAgICBzZXJ2aWNlcyA9IG9wdGlvbnMuc2VydmljZXM7XG4vLyAgICAgeG1sID0gb3B0aW9ucy54bWw7XG4vLyAgICAgdXJpID0gb3B0aW9ucy51cmk7XG4vLyAgIH1cblxuLy8gICBjb25zdCB3c2RsID0gbmV3IFdTREwoeG1sIHx8IHNlcnZpY2VzLCB1cmksIG9wdGlvbnMpO1xuLy8gICByZXR1cm4gbmV3IFNlcnZlcihzZXJ2ZXIsIHBhdGgsIHNlcnZpY2VzLCB3c2RsLCBvcHRpb25zKTtcbi8vIH1cblxuZXhwb3J0IGNvbnN0IEJhc2ljQXV0aFNlY3VyaXR5ID0gc2VjdXJpdHkuQmFzaWNBdXRoU2VjdXJpdHk7XG5leHBvcnQgY29uc3QgTlRMTVNlY3VyaXR5ID0gc2VjdXJpdHkuTlRMTVNlY3VyaXR5O1xuZXhwb3J0IGNvbnN0IFdTU2VjdXJpdHkgPSBzZWN1cml0eS5XU1NlY3VyaXR5O1xuZXhwb3J0IGNvbnN0IFdTU2VjdXJpdHlDZXJ0ID0gc2VjdXJpdHkuV1NTZWN1cml0eUNlcnQ7XG5leHBvcnQgY29uc3QgQ2xpZW50U1NMU2VjdXJpdHkgPSBzZWN1cml0eS5DbGllbnRTU0xTZWN1cml0eTtcbmV4cG9ydCBjb25zdCBDbGllbnRTU0xTZWN1cml0eVBGWCA9IHNlY3VyaXR5LkNsaWVudFNTTFNlY3VyaXR5UEZYO1xuZXhwb3J0IGNvbnN0IEJlYXJlclNlY3VyaXR5ID0gc2VjdXJpdHkuQmVhcmVyU2VjdXJpdHk7XG4iXX0=