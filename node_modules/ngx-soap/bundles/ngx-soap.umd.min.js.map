{"version":3,"sources":["null","ng://ngx-soap/lib/soap/nscontext.ts","ng://ngx-soap/lib/soap/utils.ts","ng://ngx-soap/lib/soap/wsdl.ts","ng://ngx-soap/lib/soap/client.ts","ng://ngx-soap/lib/soap/soap.ts","ng://ngx-soap/lib/ngx-soap.service.ts","ng://ngx-soap/lib/ngx-soap.module.ts"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","NamespaceScope","parent","prefix","localOnly","nsUri","namespaces","uri","getNamespaceURI","declared","mapping","getNamespaceMapping","p","getPrefix","NamespaceContext","currentScope","scope","scopes","prefixCount","addNamespace","pushContext","TNS_PREFIX","findPrefix","xmlnsMapping","nsURI","utils.TNS_PREFIX","utils.findPrefix","Primitives","string","boolean","decimal","float","double","anyType","byte","int","long","short","negativeInteger","nonNegativeInteger","positiveInteger","nonPositiveInteger","unsignedByte","unsignedInt","unsignedLong","unsignedShort","duration","dateTime","time","date","gYearMonth","gYear","gMonthDay","gDay","gMonth","hexBinary","base64Binary","anyURI","QName","NOTATION","splitQName","nsName","i","indexOf","name","substring","xmlEscape","obj","substr","replace","trimLeft","trimRight","trim","text","Element","attrs","options","parts","key","children","xmlns","_initializeOptions","match","exec","valueKey","$targetNamespace","undefined","prototype","xmlKey","ignoredNamespaces","deleteFixedAttrs","Object","keys","allowedChildren","startElement","stack","ChildClass","unexpected","endElement","parent_1","_.defaultsDeep","addChild","child","Error","description","definitions","$name","init","createSubClass","root","subElement","arguments","__proto__","ElementElement","AnyElement","InputElement","OutputElement","SimpleTypeElement","RestrictionElement","ExtensionElement","ChoiceElement","EnumerationElement","ComplexTypeElement","ComplexContentElement","SimpleContentElement","SequenceElement","AllElement","MessageElement","DocumentationElement","SchemaElement","TypesElement","OperationElement","PortTypeElement","BindingElement","PortElement","ServiceElement","DefinitionsElement","ElementTypeMap","types","schema","element","any","simpleType","restriction","extension","choice","enumeration","complexType","complexContent","simpleContent","sequence","all","service","port","binding","portType","message","operation","input","output","fault","documentation","mapElementTypes","rtn","split","forEach","type","complexTypes","elements","includes","schemas","inputSoap","outputSoap","style","soapAction","methods","transport","location","ports","messages","portTypes","bindings","services","merge","source","assert","_.merge","location_1","$schemaLocation","$location","namespace","$namespace","targetNamespace","hasOwnProperty","console","error","use","$use","encodingStyle","$encodingStyle","$soapAction","$style","$transport","self","postProcess","part","ns","$element","elementChildren","lookupTypes","targetNSAlias","$lookupType","_getNestedLookupTypeString","join","filter","schemaXmlns","_createLookupTypeObject","$lookupTypes","$type","typeNs","ctype","method","splice","schemaDefinition","nsString","splittedNSString","nsAlias","splittedName","lookupTypeObj","resolvedType","excluded","concat","self_1","resolvedChildType","tag","messageName","$message","$binding","desc","$base","typeName","schema_1","typeElement_1","getBase","map","typeElement","base","isMany","$maxOccurs","isNaN","$minOccurs","$ref","descriptions","elem_1","description_1","name_1","inputDesc","outputDesc","name_2","name_3","WSDL","definition","fromFunc","x","callback","_includesWsdl","WSDL_CACHE","charCodeAt","slice","_fromXML","_fromServices","processIncludes","name_4","name_5","bindingName","topEls","topElements","methodName","inputName","outputName","xmlnsInEnvelope","_xmlnsMap","catch","err","appendColon","charAt","noColonNameSpace","open_wsdl","wsdl_headers","wsdl_options","log","httpClient","get","responseType","toPromise","wsdlDef","_a","wsdl","onReady","wsdlObj","ignoreBaseNameSpaces","_originalIgnoredNamespaces","Array","isArray","override","escapeXML","returnFault","handleNilAsNull","namespaceArrayElements","request","forceSoap12Headers","customDeserializer","overrideRootElement","useEmptyTag","_processNextInclude","include","shift","test","includePath","url.resolve","_.assign","fromCache","open_wsdl_recursive","_.mergeWith","a","b","destination","_.isArray","describeServices","name_6","toXML","xml","xmlToObject","id","sax.parser","objectName","object","Envelope","Header","Security","UsernameToken","Username","Password","Body","Fault","faultcode","faultstring","detail","refs","onopentag","node","attributeName","xsiTypeSchema","attributes","top","topSchema","elementAttributes","hasNonXmlnsAttribute","hasNilAttribute","originalName","isInput","onerror","href","hrefs","par","res","toLowerCase","attributesKey","xsiType","typeURI","typeDef","findSchemaObject","nil","onclosetag","cur","topObject","_.isPlainObject","oncdata","originalText","top_1","ontext","resume","statusCode","parseInt","Date","preserveWhitespace","saxStream","sax.createStream","on","pipe","r","finish","write","close","ref","code","$value","qname","def","objectToDocumentXML","params","nsPrefix","_xml","args","parameterTypeObj","objectToXML","objectToRpcXML","isParts","defs","prefixedKey","isIgnoredNameSpace","filterOutIgnoredNameSpace","isFirst","xmlnsAttr","schemaObject","nsContext","parentNsPrefix","current","soapHeader","qualified","$elementFormDefault","prefixNamespace","xmlnsAttrib","xmlnsAttributes","attribute","declareNamespace","item","arrayAttr","processAttributes","correctOuterNsPrefix","openingTagParts","popContext","attr","nonSubNameSpace","emptyNonSubNameSpace","nameWithNsRegex","childSchemaObject","findChildSchemaObject","childNsPrefix","childName","childNsURI","childXmlnsAttrib","elementQName","registerNamespace","unqualified","$form","resolvedChildSchemaObject","typeQName","typePrefix","findSchemaType","$baseNameSpace","xsi_type","attrObj","attrKey","attrValue","backtrace","found","typeObj","typeInfo","baseQName","childNameSpace","foundBase","_parse","strict","str","alias","nonIdentifierChars","Client","endpoint","events.EventEmitter","_initializeServices","overridePromiseSuffix","createClient","url","wsdl.open_wsdl","util.inherits","addSoapHeader","soapHeaders","changeSoapHeader","index","getSoapHeaders","clearSoapHeaders","addHttpHeader","httpHeaders","getHttpHeaders","clearHttpHeaders","addBodyAttribute","bodyAttribute","bodyAttributes","composition_1","getOwnPropertyNames","prop","idx","array","getBodyAttributes","clearBodyAttributes","setEndpoint","describe","setSecurity","security","setSOAPAction","SOAPAction","_defineService","streamAllowed","stream","normalizeNames","envelopeKey","_definePort","_defineMethod","temp","extraHeaders","_invoke","encoding","headers","Content-Type","xmlnsSoap","header","lastIndexOf","addHeaders","addOptions","assert.ok","lastMessage","lastRequest","lastEndpoint","eid","exchangeId","uuid4","emit","tryJSONparse","JSON","parse","post","observe","response","lastResponse","lastResponseHeaders","json","_.isObject","responseBody","html","term","parseSync","NgxSoapService","http","wsdlUrl","Injectable","providedIn","HttpClient","NgxSoapModule","NgModule","imports","HttpClientModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","'use strict';\n\nexport class NamespaceScope {\n  parent: any;\n  namespaces: any;\n  constructor(parent: any) {\n    if (!(this instanceof NamespaceScope)) {\n      return new NamespaceScope(parent);\n    }\n    this.parent = parent;\n    this.namespaces = {};  \n  }\n\n  getNamespaceURI = function(prefix, localOnly) {\n    switch (prefix) {\n      case 'xml':\n        return 'http://www.w3.org/XML/1998/namespace';\n      case 'xmlns':\n        return 'http://www.w3.org/2000/xmlns/';\n      default:\n        var nsUri = this.namespaces[prefix];\n        /*jshint -W116 */\n        if (nsUri != null) {\n          return nsUri.uri;\n        } else if (!localOnly && this.parent) {\n          return this.parent.getNamespaceURI(prefix);\n        } else {\n          return null;\n        }\n    }\n  }\n\n  getNamespaceMapping = function(prefix) {\n    switch (prefix) {\n      case 'xml':\n        return {\n          uri: 'http://www.w3.org/XML/1998/namespace',\n          prefix: 'xml',\n          declared: true\n        };\n      case 'xmlns':\n        return {\n          uri: 'http://www.w3.org/2000/xmlns/',\n          prefix: 'xmlns',\n          declared: true\n        };\n      default:\n        var mapping = this.namespaces[prefix];\n        /*jshint -W116 */\n        if (mapping != null) {\n          return mapping;\n        } else if (this.parent) {\n          return this.parent.getNamespaceMapping(prefix);\n        } else {\n          return null;\n        }\n    }\n  }\n\n  getPrefix = function(nsUri, localOnly) {\n    switch (nsUri) {\n      case 'http://www.w3.org/XML/1998/namespace':\n        return 'xml';\n      case 'http://www.w3.org/2000/xmlns/':\n        return 'xmlns';\n      default:\n        for (var p in this.namespaces) {\n          if (this.namespaces[p].uri === nsUri) {\n            return p;\n          }\n        }\n        if (!localOnly && this.parent) {\n          return this.parent.getPrefix(nsUri);\n        } else {\n          return null;\n        }\n    }\n  }\n}\n\nexport class NamespaceContext {\n  scopes: any[];\n  prefixCount: number; \n\n  constructor() {\n    if (!(this instanceof NamespaceContext)) {\n      return new NamespaceContext();\n    }\n    this.scopes = [];\n    this.pushContext();\n    this.prefixCount = 0;\n  }\n\n  addNamespace = function(prefix, nsUri, localOnly) {\n    if (this.getNamespaceURI(prefix, localOnly) === nsUri) {\n      return false;\n    }\n    if (this.currentScope) {\n      this.currentScope.namespaces[prefix] = {\n        uri: nsUri,\n        prefix: prefix,\n        declared: false\n      };\n      return true;\n    }\n    return false;\n  }\n\n  pushContext = function() {\n    var scope = new NamespaceScope(this.currentScope);\n    this.scopes.push(scope);\n    this.currentScope = scope;\n    return scope;\n  }\n\n  popContext = function() {\n    var scope = this.scopes.pop();\n    if (scope) {\n      this.currentScope = scope.parent;\n    } else {\n      this.currentScope = null;\n    }\n    return scope;\n  }\n\n  getNamespaceURI = function(prefix, localOnly) {\n    return this.currentScope && this.currentScope.getNamespaceURI(prefix, localOnly);\n  }\n\n  getPrefix = function(nsUri, localOnly) {\n    return this.currentScope && this.currentScope.getPrefix(nsUri, localOnly);\n  }\n  \n  registerNamespace = function(nsUri) {\n    var prefix = this.getPrefix(nsUri);\n    if (prefix) {\n      // If the namespace has already mapped to a prefix\n      return prefix;\n    } else {\n      // Try to generate a unique namespace\n      while (true) {\n        prefix = 'ns' + (++this.prefixCount);\n        if (!this.getNamespaceURI(prefix)) {\n          // The prefix is not used\n          break;\n        }\n      }\n    }\n    this.addNamespace(prefix, nsUri, true);\n    return prefix;\n  }\n\n  declareNamespace = function(prefix, nsUri) {\n    if (this.currentScope) {\n      var mapping = this.currentScope.getNamespaceMapping(prefix);\n      if (mapping && mapping.uri === nsUri && mapping.declared) {\n        return false;\n      }\n      this.currentScope.namespaces[prefix] = {\n        uri: nsUri,\n        prefix: prefix,\n        declared: true\n      };\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Scope for XML namespaces\n * @param [parent] Parent scope\n * \n */\n// export function NamespaceScope(parent) {\n//   if (!(this instanceof NamespaceScope)) {\n//     return NamespaceScope(parent);\n//   }\n//   this.parent = parent;\n//   this.namespaces = {};\n// }\n\n// /**\n//  * Namespace context that manages hierarchical scopes\n//  *  {NamespaceContext}\n//  */\n// export function NamespaceContext() {\n//   if (!(this instanceof NamespaceContext)) {\n//     return NamespaceContext();\n//   }\n//   this.scopes = [];\n//   this.pushContext();\n//   this.prefixCount = 0;\n// }\n\n// /**\n//  * Look up the namespace URI by prefix\n//  * @param  prefix Namespace prefix\n//  * @param  [localOnly] Search current scope only\n//  *   Namespace URI\n//  */\n// NamespaceScope.prototype.getNamespaceURI = function(prefix, localOnly) {\n//   switch (prefix) {\n//     case 'xml':\n//       return 'http://www.w3.org/XML/1998/namespace';\n//     case 'xmlns':\n//       return 'http://www.w3.org/2000/xmlns/';\n//     default:\n//       var nsUri = this.namespaces[prefix];\n//       /*jshint -W116 */\n//       if (nsUri != null) {\n//         return nsUri.uri;\n//       } else if (!localOnly && this.parent) {\n//         return this.parent.getNamespaceURI(prefix);\n//       } else {\n//         return null;\n//       }\n//   }\n// };\n\n// NamespaceScope.prototype.getNamespaceMapping = function(prefix) {\n//   switch (prefix) {\n//     case 'xml':\n//       return {\n//         uri: 'http://www.w3.org/XML/1998/namespace',\n//         prefix: 'xml',\n//         declared: true\n//       };\n//     case 'xmlns':\n//       return {\n//         uri: 'http://www.w3.org/2000/xmlns/',\n//         prefix: 'xmlns',\n//         declared: true\n//       };\n//     default:\n//       var mapping = this.namespaces[prefix];\n//       /*jshint -W116 */\n//       if (mapping != null) {\n//         return mapping;\n//       } else if (this.parent) {\n//         return this.parent.getNamespaceMapping(prefix);\n//       } else {\n//         return null;\n//       }\n//   }\n// };\n\n// /**\n//  * Look up the namespace prefix by URI\n//  * @param  nsUri Namespace URI\n//  * @param  [localOnly] Search current scope only\n//  *   Namespace prefix\n//  */\n// NamespaceScope.prototype.getPrefix = function(nsUri, localOnly) {\n//   switch (nsUri) {\n//     case 'http://www.w3.org/XML/1998/namespace':\n//       return 'xml';\n//     case 'http://www.w3.org/2000/xmlns/':\n//       return 'xmlns';\n//     default:\n//       for (var p in this.namespaces) {\n//         if (this.namespaces[p].uri === nsUri) {\n//           return p;\n//         }\n//       }\n//       if (!localOnly && this.parent) {\n//         return this.parent.getPrefix(nsUri);\n//       } else {\n//         return null;\n//       }\n//   }\n// };\n\n// /**\n//  * Add a prefix/URI namespace mapping\n//  * @param  prefix Namespace prefix\n//  * @param  nsUri Namespace URI\n//  * @param  [localOnly] Search current scope only\n//  *  {boolean} true if the mapping is added or false if the mapping\n//  * already exists\n//  */\n// NamespaceContext.prototype.addNamespace = function(prefix, nsUri, localOnly) {\n//   if (this.getNamespaceURI(prefix, localOnly) === nsUri) {\n//     return false;\n//   }\n//   if (this.currentScope) {\n//     this.currentScope.namespaces[prefix] = {\n//       uri: nsUri,\n//       prefix: prefix,\n//       declared: false\n//     };\n//     return true;\n//   }\n//   return false;\n// };\n\n// /**\n//  * Push a scope into the context\n//  *  The current scope\n//  */\n// NamespaceContext.prototype.pushContext = function() {\n//   var scope = NamespaceScope(this.currentScope);\n//   this.scopes.push(scope);\n//   this.currentScope = scope;\n//   return scope;\n// };\n\n// /**\n//  * Pop a scope out of the context\n//  *   The removed scope\n//  */\n// NamespaceContext.prototype.popContext = function() {\n//   var scope = this.scopes.pop();\n//   if (scope) {\n//     this.currentScope = scope.parent;\n//   } else {\n//     this.currentScope = null;\n//   }\n//   return scope;\n// };\n\n// /**\n//  * Look up the namespace URI by prefix\n//  * @param  prefix Namespace prefix\n//  * @param  [localOnly] Search current scope only\n//  *   Namespace URI\n//  */\n// NamespaceContext.prototype.getNamespaceURI = function(prefix, localOnly) {\n//   return this.currentScope && this.currentScope.getNamespaceURI(prefix, localOnly);\n// };\n\n// /**\n//  * Look up the namespace prefix by URI\n//  * @param  nsURI Namespace URI\n//  * @param  [localOnly] Search current scope only\n//  *   Namespace prefix\n//  */\n// NamespaceContext.prototype.getPrefix = function(nsUri, localOnly) {\n//   return this.currentScope && this.currentScope.getPrefix(nsUri, localOnly);\n// };\n\n// /**\n//  * Register a namespace\n//  * @param  nsUri Namespace URI\n//  *   The matching or generated namespace prefix\n//  */\n// NamespaceContext.prototype.registerNamespace = function(nsUri) {\n//   var prefix = this.getPrefix(nsUri);\n//   if (prefix) {\n//     // If the namespace has already mapped to a prefix\n//     return prefix;\n//   } else {\n//     // Try to generate a unique namespace\n//     while (true) {\n//       prefix = 'ns' + (++this.prefixCount);\n//       if (!this.getNamespaceURI(prefix)) {\n//         // The prefix is not used\n//         break;\n//       }\n//     }\n//   }\n//   this.addNamespace(prefix, nsUri, true);\n//   return prefix;\n// };\n\n// /**\n//  * Declare a namespace prefix/uri mapping\n//  * @param  prefix Namespace prefix\n//  * @param  nsUri Namespace URI\n//  *   true if the declaration is created\n//  */\n// NamespaceContext.prototype.declareNamespace = function(prefix, nsUri) {\n//   if (this.currentScope) {\n//     var mapping = this.currentScope.getNamespaceMapping(prefix);\n//     if (mapping && mapping.uri === nsUri && mapping.declared) {\n//       return false;\n//     }\n//     this.currentScope.namespaces[prefix] = {\n//       uri: nsUri,\n//       prefix: prefix,\n//       declared: true\n//     };\n//     return true;\n//   }\n//   return false;\n// };\n","// import { createHash } from 'crypto-browserify';\nimport { Buffer } from 'buffer';\n\n// export const passwordDigest = function passwordDigest(nonce, created, password) {\n//   // digest = base64 ( sha1 ( nonce + created + password ) )\n//   const pwHash = createHash('sha1');\n//   const rawNonce = new Buffer(nonce || '', 'base64').toString('binary');\n//   pwHash.update(rawNonce + created + password);\n//   return pwHash.digest('base64');\n// };\n\n\nexport const TNS_PREFIX = '__tns__'; // Prefix for targetNamespace\n\n/**\n * Find a key from an object based on the value\n * @param  Namespace prefix/uri mapping\n * @param  nsURI value\n * @returns  The matching key\n */\nexport const findPrefix = function(xmlnsMapping, nsURI) {\n  for (const n in xmlnsMapping) {\n    if (n === TNS_PREFIX) { continue; }\n    if (xmlnsMapping[n] === nsURI) {\n      return n;\n    }\n  }\n};\n","/*\n * Copyright (c) 2011 Vinay Pulim <vinay@milewise.com>\n * MIT Licensed\n *\n */\n/*jshint proto:true*/\n\n\"use strict\";\n\nimport * as sax from 'sax';\nimport { HttpClient } from '@angular/common/http';\nimport { NamespaceContext } Â from './nscontext';\n\nimport * as url from 'url';\nimport { ok as assert } from 'assert';\n// import stripBom from 'strip-bom';\n\nconst stripBom = (x: string): string => {\n  // Catches EFBBBF (UTF-8 BOM) because the buffer-to-string\n  // conversion translates it to FEFF (UTF-16 BOM)\n  if (x.charCodeAt(0) === 0xFEFF) {\n    return x.slice(1);\n  }\n\n  return x;\n}\n\nimport * as _ from 'lodash';\nimport * as utils from './utils';\n\n\nlet TNS_PREFIX = utils.TNS_PREFIX;\nlet findPrefix = utils.findPrefix;\n\nlet Primitives = {\n  string: 1,\n  boolean: 1,\n  decimal: 1,\n  float: 1,\n  double: 1,\n  anyType: 1,\n  byte: 1,\n  int: 1,\n  long: 1,\n  short: 1,\n  negativeInteger: 1,\n  nonNegativeInteger: 1,\n  positiveInteger: 1,\n  nonPositiveInteger: 1,\n  unsignedByte: 1,\n  unsignedInt: 1,\n  unsignedLong: 1,\n  unsignedShort: 1,\n  duration: 0,\n  dateTime: 0,\n  time: 0,\n  date: 0,\n  gYearMonth: 0,\n  gYear: 0,\n  gMonthDay: 0,\n  gDay: 0,\n  gMonth: 0,\n  hexBinary: 0,\n  base64Binary: 0,\n  anyURI: 0,\n  QName: 0,\n  NOTATION: 0\n};\n\nfunction splitQName(nsName) {\n  let i = typeof nsName === 'string' ? nsName.indexOf(':') : -1;\n  return i < 0 ? { prefix: TNS_PREFIX, name: nsName } :\n    { prefix: nsName.substring(0, i), name: nsName.substring(i + 1) };\n}\n\nfunction xmlEscape(obj) {\n  if (typeof (obj) === 'string') {\n    if (obj.substr(0, 9) === '<![CDATA[' && obj.substr(-3) === \"]]>\") {\n      return obj;\n    }\n    return obj\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;');\n  }\n\n  return obj;\n}\n\nlet trimLeft = /^[\\s\\xA0]+/;\nlet trimRight = /[\\s\\xA0]+$/;\n\nfunction trim(text) {\n  return text.replace(trimLeft, '').replace(trimRight, '');\n}\n\nfunction deepMerge(destination, source) {\n  return _.mergeWith(destination || {}, source, function (a, b) {\n    return _.isArray(a) ? a.concat(b) : undefined;\n  });\n}\n\nlet Element: any = function (nsName, attrs, options) {\n  let parts = splitQName(nsName);\n\n  this.nsName = nsName;\n  this.prefix = parts.prefix;\n  this.name = parts.name;\n  this.children = [];\n  this.xmlns = {};\n\n  this._initializeOptions(options);\n\n  for (let key in attrs) {\n    let match = /^xmlns:?(.*)$/.exec(key);\n    if (match) {\n      this.xmlns[match[1] ? match[1] : TNS_PREFIX] = attrs[key];\n    }\n    else {\n      if (key === 'value') {\n        this[this.valueKey] = attrs[key];\n      } else {\n        this['$' + key] = attrs[key];\n      }\n    }\n  }\n  if (this.$targetNamespace !== undefined) {\n    // Add targetNamespace to the mapping\n    this.xmlns[TNS_PREFIX] = this.$targetNamespace;\n  }\n};\n\nElement.prototype._initializeOptions = function (options) {\n  if (options) {\n    this.valueKey = options.valueKey || '$value';\n    this.xmlKey = options.xmlKey || '$xml';\n    this.ignoredNamespaces = options.ignoredNamespaces || [];\n  } else {\n    this.valueKey = '$value';\n    this.xmlKey = '$xml';\n    this.ignoredNamespaces = [];\n  }\n};\n\nElement.prototype.deleteFixedAttrs = function () {\n  this.children && this.children.length === 0 && delete this.children;\n  this.xmlns && Object.keys(this.xmlns).length === 0 && delete this.xmlns;\n  delete this.nsName;\n  delete this.prefix;\n  delete this.name;\n};\n\nElement.prototype.allowedChildren = [];\n\nElement.prototype.startElement = function (stack, nsName, attrs, options) {\n  if (!this.allowedChildren) {\n    return;\n  }\n\n  let ChildClass = this.allowedChildren[splitQName(nsName).name],\n    element = null;\n\n  if (ChildClass) {\n    stack.push(new ChildClass(nsName, attrs, options));\n  }\n  else {\n    this.unexpected(nsName);\n  }\n\n};\n\nElement.prototype.endElement = function (stack, nsName) {\n  if (this.nsName === nsName) {\n    if (stack.length < 2)\n      return;\n    let parent = stack[stack.length - 2];\n    if (this !== stack[0]) {\n      _.defaultsDeep(stack[0].xmlns, this.xmlns);\n      // delete this.xmlns;\n      parent.children.push(this);\n      parent.addChild(this);\n    }\n    stack.pop();\n  }\n};\n\nElement.prototype.addChild = function (child) {\n  return;\n};\n\nElement.prototype.unexpected = function (name) {\n  throw new Error('Found unexpected element (' + name + ') inside ' + this.nsName);\n};\n\nElement.prototype.description = function (definitions) {\n  return this.$name || this.name;\n};\n\nElement.prototype.init = function () {\n};\n\nElement.createSubClass = function () {\n  let root = this;\n  let subElement = function () {\n    root.apply(this, arguments);\n    this.init();\n  };\n  // inherits(subElement, root);\n  subElement.prototype.__proto__ = root.prototype;\n  return subElement;\n};\n\n\nlet ElementElement = Element.createSubClass();\nlet AnyElement = Element.createSubClass();\nlet InputElement = Element.createSubClass();\nlet OutputElement = Element.createSubClass();\nlet SimpleTypeElement = Element.createSubClass();\nlet RestrictionElement = Element.createSubClass();\nlet ExtensionElement = Element.createSubClass();\nlet ChoiceElement = Element.createSubClass();\nlet EnumerationElement = Element.createSubClass();\nlet ComplexTypeElement = Element.createSubClass();\nlet ComplexContentElement = Element.createSubClass();\nlet SimpleContentElement = Element.createSubClass();\nlet SequenceElement = Element.createSubClass();\nlet AllElement = Element.createSubClass();\nlet MessageElement = Element.createSubClass();\nlet DocumentationElement = Element.createSubClass();\n\nlet SchemaElement = Element.createSubClass();\nlet TypesElement = Element.createSubClass();\nlet OperationElement = Element.createSubClass();\nlet PortTypeElement = Element.createSubClass();\nlet BindingElement = Element.createSubClass();\nlet PortElement = Element.createSubClass();\nlet ServiceElement = Element.createSubClass();\nlet DefinitionsElement = Element.createSubClass();\n\nlet ElementTypeMap = {\n  types: [TypesElement, 'schema documentation'],\n  schema: [SchemaElement, 'element complexType simpleType include import'],\n  element: [ElementElement, 'annotation complexType'],\n  any: [AnyElement, ''],\n  simpleType: [SimpleTypeElement, 'restriction'],\n  restriction: [RestrictionElement, 'enumeration all choice sequence'],\n  extension: [ExtensionElement, 'all sequence choice'],\n  choice: [ChoiceElement, 'element sequence choice any'],\n  // group: [GroupElement, 'element group'],\n  enumeration: [EnumerationElement, ''],\n  complexType: [ComplexTypeElement, 'annotation sequence all complexContent simpleContent choice'],\n  complexContent: [ComplexContentElement, 'extension'],\n  simpleContent: [SimpleContentElement, 'extension'],\n  sequence: [SequenceElement, 'element sequence choice any'],\n  all: [AllElement, 'element choice'],\n\n  service: [ServiceElement, 'port documentation'],\n  port: [PortElement, 'address documentation'],\n  binding: [BindingElement, '_binding SecuritySpec operation documentation'],\n  portType: [PortTypeElement, 'operation documentation'],\n  message: [MessageElement, 'part documentation'],\n  operation: [OperationElement, 'documentation input output fault _operation'],\n  input: [InputElement, 'body SecuritySpecRef documentation header'],\n  output: [OutputElement, 'body SecuritySpecRef documentation header'],\n  fault: [Element, '_fault documentation'],\n  definitions: [DefinitionsElement, 'types message portType binding service import documentation'],\n  documentation: [DocumentationElement, '']\n};\n\nfunction mapElementTypes(types) {\n  let rtn = {};\n  types = types.split(' ');\n  types.forEach(function (type) {\n    rtn[type.replace(/^_/, '')] = (ElementTypeMap[type] || [Element])[0];\n  });\n  return rtn;\n}\n\nfor (let n in ElementTypeMap) {\n  let v = ElementTypeMap[n];\n  v[0].prototype.allowedChildren = mapElementTypes(v[1]);\n}\n\nMessageElement.prototype.init = function () {\n  this.element = null;\n  this.parts = null;\n};\n\nSchemaElement.prototype.init = function () {\n  this.complexTypes = {};\n  this.types = {};\n  this.elements = {};\n  this.includes = [];\n};\n\nTypesElement.prototype.init = function () {\n  this.schemas = {};\n};\n\nOperationElement.prototype.init = function () {\n  this.input = null;\n  this.output = null;\n  this.inputSoap = null;\n  this.outputSoap = null;\n  this.style = '';\n  this.soapAction = '';\n};\n\nPortTypeElement.prototype.init = function () {\n  this.methods = {};\n};\n\nBindingElement.prototype.init = function () {\n  this.transport = '';\n  this.style = '';\n  this.methods = {};\n};\n\nPortElement.prototype.init = function () {\n  this.location = null;\n};\n\nServiceElement.prototype.init = function () {\n  this.ports = {};\n};\n\nDefinitionsElement.prototype.init = function () {\n  if (this.name !== 'definitions') this.unexpected(this.nsName);\n  this.messages = {};\n  this.portTypes = {};\n  this.bindings = {};\n  this.services = {};\n  this.schemas = {};\n};\n\nDocumentationElement.prototype.init = function () {\n};\n\nSchemaElement.prototype.merge = function (source) {\n  assert(source instanceof SchemaElement);\n  if (this.$targetNamespace === source.$targetNamespace) {\n    _.merge(this.complexTypes, source.complexTypes);\n    _.merge(this.types, source.types);\n    _.merge(this.elements, source.elements);\n    _.merge(this.xmlns, source.xmlns);\n  }\n  return this;\n};\n\n\nSchemaElement.prototype.addChild = function (child) {\n  if (child.$name in Primitives)\n    return;\n  if (child.name === 'include' || child.name === 'import') {\n    let location = child.$schemaLocation || child.$location;\n    if (location) {\n      this.includes.push({\n        namespace: child.$namespace || child.$targetNamespace || this.$targetNamespace,\n        location: location\n      });\n    }\n  }\n  else if (child.name === 'complexType') {\n    this.complexTypes[child.$name] = child;\n  }\n  else if (child.name === 'element') {\n    this.elements[child.$name] = child;\n  }\n  else if (child.$name) {\n    this.types[child.$name] = child;\n  }\n  this.children.pop();\n  // child.deleteFixedAttrs();\n};\n//fix#325\nTypesElement.prototype.addChild = function (child) {\n  assert(child instanceof SchemaElement);\n\n  let targetNamespace = child.$targetNamespace;\n\n  if (!this.schemas.hasOwnProperty(targetNamespace)) {\n    this.schemas[targetNamespace] = child;\n  } else {\n    console.error('Target-Namespace \"' + targetNamespace + '\" already in use by another Schema!');\n  }\n};\n\nInputElement.prototype.addChild = function (child) {\n  if (child.name === 'body') {\n    this.use = child.$use;\n    if (this.use === 'encoded') {\n      this.encodingStyle = child.$encodingStyle;\n    }\n    this.children.pop();\n  }\n};\n\nOutputElement.prototype.addChild = function (child) {\n  if (child.name === 'body') {\n    this.use = child.$use;\n    if (this.use === 'encoded') {\n      this.encodingStyle = child.$encodingStyle;\n    }\n    this.children.pop();\n  }\n};\n\nOperationElement.prototype.addChild = function (child) {\n  if (child.name === 'operation') {\n    this.soapAction = child.$soapAction || '';\n    this.style = child.$style || '';\n    this.children.pop();\n  }\n};\n\nBindingElement.prototype.addChild = function (child) {\n  if (child.name === 'binding') {\n    this.transport = child.$transport;\n    this.style = child.$style;\n    this.children.pop();\n  }\n};\n\nPortElement.prototype.addChild = function (child) {\n  if (child.name === 'address' && typeof (child.$location) !== 'undefined') {\n    this.location = child.$location;\n  }\n};\n\nDefinitionsElement.prototype.addChild = function (child) {\n  let self = this;\n  if (child instanceof TypesElement) {\n    // Merge types.schemas into definitions.schemas\n    _.merge(self.schemas, child.schemas);\n  }\n  else if (child instanceof MessageElement) {\n    self.messages[child.$name] = child;\n  }\n  else if (child.name === 'import') {\n    self.schemas[child.$namespace] = new SchemaElement(child.$namespace, {});\n    self.schemas[child.$namespace].addChild(child);\n  }\n  else if (child instanceof PortTypeElement) {\n    self.portTypes[child.$name] = child;\n  }\n  else if (child instanceof BindingElement) {\n    if (child.transport === 'http://schemas.xmlsoap.org/soap/http' ||\n      child.transport === 'http://www.w3.org/2003/05/soap/bindings/HTTP/')\n      self.bindings[child.$name] = child;\n  }\n  else if (child instanceof ServiceElement) {\n    self.services[child.$name] = child;\n  }\n  else if (child instanceof DocumentationElement) {\n  }\n  this.children.pop();\n};\n\nMessageElement.prototype.postProcess = function (definitions) {\n  let part = null;\n  let child = undefined;\n  let children = this.children || [];\n  let ns = undefined;\n  let nsName = undefined;\n  let i = undefined;\n  let type = undefined;\n\n  for (i in children) {\n    if ((child = children[i]).name === 'part') {\n      part = child;\n      break;\n    }\n  }\n\n  if (!part) {\n    return;\n  }\n\n  if (part.$element) {\n    let lookupTypes = [],\n      elementChildren;\n\n    delete this.parts;\n\n    nsName = splitQName(part.$element);\n    ns = nsName.prefix;\n    let schema = definitions.schemas[definitions.xmlns[ns]];\n    this.element = schema.elements[nsName.name];\n    if (!this.element) {\n      // debug(nsName.name + \" is not present in wsdl and cannot be processed correctly.\");\n      return;\n    }\n    this.element.targetNSAlias = ns;\n    this.element.targetNamespace = definitions.xmlns[ns];\n\n    // set the optional $lookupType to be used within `client#_invoke()` when\n    // calling `wsdl#objectToDocumentXML()\n    this.element.$lookupType = part.$element;\n\n    elementChildren = this.element.children;\n\n    // get all nested lookup types (only complex types are followed)\n    if (elementChildren.length > 0) {\n      for (i = 0; i < elementChildren.length; i++) {\n        lookupTypes.push(this._getNestedLookupTypeString(elementChildren[i]));\n      }\n    }\n\n    // if nested lookup types where found, prepare them for furter usage\n    if (lookupTypes.length > 0) {\n      lookupTypes = lookupTypes.\n        join('_').\n        split('_').\n        filter(function removeEmptyLookupTypes(type) {\n          return type !== '^';\n        });\n\n      let schemaXmlns = definitions.schemas[this.element.targetNamespace].xmlns;\n\n      for (i = 0; i < lookupTypes.length; i++) {\n        lookupTypes[i] = this._createLookupTypeObject(lookupTypes[i], schemaXmlns);\n      }\n    }\n\n    this.element.$lookupTypes = lookupTypes;\n\n    if (this.element.$type) {\n      type = splitQName(this.element.$type);\n      let typeNs = schema.xmlns && schema.xmlns[type.prefix] || definitions.xmlns[type.prefix];\n\n      if (typeNs) {\n        if (type.name in Primitives) {\n          // this.element = this.element.$type;\n        }\n        else {\n          // first check local mapping of ns alias to namespace\n          schema = definitions.schemas[typeNs];\n          let ctype = schema.complexTypes[type.name] || schema.types[type.name] || schema.elements[type.name];\n\n\n          if (ctype) {\n            this.parts = ctype.description(definitions, schema.xmlns);\n          }\n        }\n      }\n    }\n    else {\n      let method = this.element.description(definitions, schema.xmlns);\n      this.parts = method[nsName.name];\n    }\n\n\n    this.children.splice(0, 1);\n  } else {\n    // rpc encoding\n    this.parts = {};\n    delete this.element;\n    for (i = 0; part = this.children[i]; i++) {\n      if (part.name === 'documentation') {\n        // <wsdl:documentation can be present under <wsdl:message>\n        continue;\n      }\n      assert(part.name === 'part', 'Expected part element');\n      nsName = splitQName(part.$type);\n      ns = definitions.xmlns[nsName.prefix];\n      type = nsName.name;\n      let schemaDefinition = definitions.schemas[ns];\n      if (typeof schemaDefinition !== 'undefined') {\n        this.parts[part.$name] = definitions.schemas[ns].types[type] || definitions.schemas[ns].complexTypes[type];\n      } else {\n        this.parts[part.$name] = part.$type;\n      }\n\n      if (typeof this.parts[part.$name] === 'object') {\n        this.parts[part.$name].prefix = nsName.prefix;\n        this.parts[part.$name].xmlns = ns;\n      }\n\n      this.children.splice(i--, 1);\n    }\n  }\n  this.deleteFixedAttrs();\n};\n\n/**\n * Takes a given namespaced String(for example: 'alias:property') and creates a lookupType\n * object for further use in as first (lookup) `parameterTypeObj` within the `objectToXML`\n * method and provides an entry point for the already existing code in `findChildSchemaObject`.\n *\n * @method _createLookupTypeObject\n * @param {String}            nsString          The NS String (for example \"alias:type\").\n * @param {Object}            xmlns       The fully parsed `wsdl` definitions object (including all schemas).\n * @returns {Object}\n * @private\n */\nMessageElement.prototype._createLookupTypeObject = function (nsString, xmlns) {\n  let splittedNSString = splitQName(nsString),\n    nsAlias = splittedNSString.prefix,\n    splittedName = splittedNSString.name.split('#'),\n    type = splittedName[0],\n    name = splittedName[1],\n    lookupTypeObj: any = {};\n\n  lookupTypeObj.$namespace = xmlns[nsAlias];\n  lookupTypeObj.$type = nsAlias + ':' + type;\n  lookupTypeObj.$name = name;\n\n  return lookupTypeObj;\n};\n\n/**\n * Iterates through the element and every nested child to find any defined `$type`\n * property and returns it in a underscore ('_') separated String (using '^' as default\n * value if no `$type` property was found).\n *\n * @method _getNestedLookupTypeString\n * @param {Object}            element         The element which (probably) contains nested `$type` values.\n * @returns {String}\n * @private\n */\nMessageElement.prototype._getNestedLookupTypeString = function (element) {\n  let resolvedType = '^',\n    excluded = this.ignoredNamespaces.concat('xs'); // do not process $type values wich start with\n\n  if (element.hasOwnProperty('$type') && typeof element.$type === 'string') {\n    if (excluded.indexOf(element.$type.split(':')[0]) === -1) {\n      resolvedType += ('_' + element.$type + '#' + element.$name);\n    }\n  }\n\n  if (element.children.length > 0) {\n    let self = this;\n\n    element.children.forEach(function (child) {\n      let resolvedChildType = self._getNestedLookupTypeString(child).replace(/\\^_/, '');\n\n      if (resolvedChildType && typeof resolvedChildType === 'string') {\n        resolvedType += ('_' + resolvedChildType);\n      }\n    });\n  }\n\n  return resolvedType;\n};\n\nOperationElement.prototype.postProcess = function (definitions, tag) {\n  let children = this.children;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child.name !== 'input' && child.name !== 'output')\n      continue;\n    if (tag === 'binding') {\n      this[child.name] = child;\n      children.splice(i--, 1);\n      continue;\n    }\n    let messageName = splitQName(child.$message).name;\n    let message = definitions.messages[messageName];\n    message.postProcess(definitions);\n    if (message.element) {\n      definitions.messages[message.element.$name] = message;\n      this[child.name] = message.element;\n    }\n    else {\n      this[child.name] = message;\n    }\n    children.splice(i--, 1);\n  }\n  this.deleteFixedAttrs();\n};\n\nPortTypeElement.prototype.postProcess = function (definitions) {\n  let children = this.children;\n  if (typeof children === 'undefined')\n    return;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child.name !== 'operation')\n      continue;\n    child.postProcess(definitions, 'portType');\n    this.methods[child.$name] = child;\n    children.splice(i--, 1);\n  }\n  delete this.$name;\n  this.deleteFixedAttrs();\n};\n\nBindingElement.prototype.postProcess = function (definitions) {\n  let type = splitQName(this.$type).name,\n    portType = definitions.portTypes[type],\n    style = this.style,\n    children = this.children;\n  if (portType) {\n    portType.postProcess(definitions);\n    this.methods = portType.methods;\n\n    for (let i = 0, child; child = children[i]; i++) {\n      if (child.name !== 'operation')\n        continue;\n      child.postProcess(definitions, 'binding');\n      children.splice(i--, 1);\n      child.style || (child.style = style);\n      let method = this.methods[child.$name];\n\n      if (method) {\n        method.style = child.style;\n        method.soapAction = child.soapAction;\n        method.inputSoap = child.input || null;\n        method.outputSoap = child.output || null;\n        method.inputSoap && method.inputSoap.deleteFixedAttrs();\n        method.outputSoap && method.outputSoap.deleteFixedAttrs();\n      }\n    }\n  }\n  delete this.$name;\n  delete this.$type;\n  this.deleteFixedAttrs();\n};\n\nServiceElement.prototype.postProcess = function (definitions) {\n  let children = this.children,\n    bindings = definitions.bindings;\n  if (children && children.length > 0) {\n    for (let i = 0, child; child = children[i]; i++) {\n      if (child.name !== 'port')\n        continue;\n      let bindingName = splitQName(child.$binding).name;\n      let binding = bindings[bindingName];\n      if (binding) {\n        binding.postProcess(definitions);\n        this.ports[child.$name] = {\n          location: child.location,\n          binding: binding\n        };\n        children.splice(i--, 1);\n      }\n    }\n  }\n  delete this.$name;\n  this.deleteFixedAttrs();\n};\n\n\nSimpleTypeElement.prototype.description = function (definitions) {\n  let children = this.children;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof RestrictionElement)\n      return this.$name + \"|\" + child.description();\n  }\n  return {};\n};\n\nRestrictionElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children;\n  let desc;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof SequenceElement ||\n      child instanceof ChoiceElement) {\n      desc = child.description(definitions, xmlns);\n      break;\n    }\n  }\n  if (desc && this.$base) {\n    let type = splitQName(this.$base),\n      typeName = type.name,\n      ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix],\n      schema = definitions.schemas[ns],\n      typeElement = schema && (schema.complexTypes[typeName] || schema.types[typeName] || schema.elements[typeName]);\n\n    desc.getBase = function () {\n      return typeElement.description(definitions, schema.xmlns);\n    };\n    return desc;\n  }\n\n  // then simple element\n  let base = this.$base ? this.$base + \"|\" : \"\";\n  return base + this.children.map(function (child) {\n    return child.description();\n  }).join(\",\");\n};\n\nExtensionElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children;\n  let desc = {};\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof SequenceElement ||\n      child instanceof ChoiceElement) {\n      desc = child.description(definitions, xmlns);\n    }\n  }\n  if (this.$base) {\n    let type = splitQName(this.$base),\n      typeName = type.name,\n      ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix],\n      schema = definitions.schemas[ns];\n\n    if (typeName in Primitives) {\n      return this.$base;\n    }\n    else {\n      let typeElement = schema && (schema.complexTypes[typeName] ||\n        schema.types[typeName] || schema.elements[typeName]);\n\n      if (typeElement) {\n        let base = typeElement.description(definitions, schema.xmlns);\n        desc = _.defaultsDeep(base, desc);\n      }\n    }\n  }\n  return desc;\n};\n\nEnumerationElement.prototype.description = function () {\n  return this[this.valueKey];\n};\n\nComplexTypeElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children || [];\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof ChoiceElement ||\n      child instanceof SequenceElement ||\n      child instanceof AllElement ||\n      child instanceof SimpleContentElement ||\n      child instanceof ComplexContentElement) {\n\n      return child.description(definitions, xmlns);\n    }\n  }\n  return {};\n};\n\nComplexContentElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof ExtensionElement) {\n      return child.description(definitions, xmlns);\n    }\n  }\n  return {};\n};\n\nSimpleContentElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof ExtensionElement) {\n      return child.description(definitions, xmlns);\n    }\n  }\n  return {};\n};\n\nElementElement.prototype.description = function (definitions, xmlns) {\n  let element = {},\n    name = this.$name;\n  let isMany = !this.$maxOccurs ? false : (isNaN(this.$maxOccurs) ? (this.$maxOccurs === 'unbounded') : (this.$maxOccurs > 1));\n  if (this.$minOccurs !== this.$maxOccurs && isMany) {\n    name += '[]';\n  }\n\n  if (xmlns && xmlns[TNS_PREFIX]) {\n    this.$targetNamespace = xmlns[TNS_PREFIX];\n  }\n  let type = this.$type || this.$ref;\n  if (type) {\n    type = splitQName(type);\n    let typeName = type.name,\n      ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix],\n      schema = definitions.schemas[ns],\n      typeElement = schema && (this.$type ? schema.complexTypes[typeName] || schema.types[typeName] : schema.elements[typeName]);\n\n    if (ns && definitions.schemas[ns]) {\n      xmlns = definitions.schemas[ns].xmlns;\n    }\n\n    if (typeElement && !(typeName in Primitives)) {\n\n      if (!(typeName in definitions.descriptions.types)) {\n\n        let elem: any = {};\n        definitions.descriptions.types[typeName] = elem;\n        let description = typeElement.description(definitions, xmlns);\n        if (typeof description === 'string') {\n          elem = description;\n        }\n        else {\n          Object.keys(description).forEach(function (key) {\n            elem[key] = description[key];\n          });\n        }\n\n        if (this.$ref) {\n          element = elem;\n        }\n        else {\n          element[name] = elem;\n        }\n\n        if (typeof elem === 'object') {\n          elem.targetNSAlias = type.prefix;\n          elem.targetNamespace = ns;\n        }\n\n        definitions.descriptions.types[typeName] = elem;\n      }\n      else {\n        if (this.$ref) {\n          element = definitions.descriptions.types[typeName];\n        }\n        else {\n          element[name] = definitions.descriptions.types[typeName];\n        }\n      }\n\n    }\n    else {\n      element[name] = this.$type;\n    }\n  }\n  else {\n    let children = this.children;\n    element[name] = {};\n    for (let i = 0, child; child = children[i]; i++) {\n      if (child instanceof ComplexTypeElement) {\n        element[name] = child.description(definitions, xmlns);\n      }\n    }\n  }\n  return element;\n};\n\nAllElement.prototype.description =\n  SequenceElement.prototype.description = function (definitions, xmlns) {\n    let children = this.children;\n    let sequence = {};\n    for (let i = 0, child; child = children[i]; i++) {\n      if (child instanceof AnyElement) {\n        continue;\n      }\n      let description = child.description(definitions, xmlns);\n      for (let key in description) {\n        sequence[key] = description[key];\n      }\n    }\n    return sequence;\n  };\n\nChoiceElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children;\n  let choice = {};\n  for (let i = 0, child; child = children[i]; i++) {\n    let description = child.description(definitions, xmlns);\n    for (let key in description) {\n      choice[key] = description[key];\n    }\n  }\n  return choice;\n};\n\nMessageElement.prototype.description = function (definitions) {\n  if (this.element) {\n    return this.element && this.element.description(definitions);\n  }\n  let desc = {};\n  desc[this.$name] = this.parts;\n  return desc;\n};\n\nPortTypeElement.prototype.description = function (definitions) {\n  let methods = {};\n  for (let name in this.methods) {\n    let method = this.methods[name];\n    methods[name] = method.description(definitions);\n  }\n  return methods;\n};\n\nOperationElement.prototype.description = function (definitions) {\n  let inputDesc = this.input ? this.input.description(definitions) : null;\n  let outputDesc = this.output ? this.output.description(definitions) : null;\n  return {\n    input: inputDesc && inputDesc[Object.keys(inputDesc)[0]],\n    output: outputDesc && outputDesc[Object.keys(outputDesc)[0]]\n  };\n};\n\nBindingElement.prototype.description = function (definitions) {\n  let methods = {};\n  for (let name in this.methods) {\n    let method = this.methods[name];\n    methods[name] = method.description(definitions);\n  }\n  return methods;\n};\n\nServiceElement.prototype.description = function (definitions) {\n  let ports = {};\n  for (let name in this.ports) {\n    let port = this.ports[name];\n    ports[name] = port.binding.description(definitions);\n  }\n  return ports;\n};\n\nexport let WSDL = function (definition, uri, options) {\n  let self = this,\n    fromFunc;\n\n  this.uri = uri;\n  this.callback = function () {\n  };\n  this._includesWsdl = [];\n\n  // initialize WSDL cache\n  this.WSDL_CACHE = (options || {}).WSDL_CACHE || {};\n\n  this._initializeOptions(options);\n\n  if (typeof definition === 'string') {\n    definition = stripBom(definition);\n    fromFunc = this._fromXML;\n  }\n  else if (typeof definition === 'object') {\n    fromFunc = this._fromServices;\n  }\n  else {\n    throw new Error('WSDL letructor takes either an XML string or service definition');\n  }\n\n  Promise.resolve(true).then(() => {\n    try {\n      fromFunc.call(self, definition);\n    } catch (e) {\n      return self.callback(e.message);\n    }\n\n    self.processIncludes().then(() => {\n      self.definitions.deleteFixedAttrs();\n      let services = self.services = self.definitions.services;\n      if (services) {\n        for (const name in services) {\n          services[name].postProcess(self.definitions);\n        }\n      }\n      let complexTypes = self.definitions.complexTypes;\n      if (complexTypes) {\n        for (const name in complexTypes) {\n          complexTypes[name].deleteFixedAttrs();\n        }\n      }\n\n      // for document style, for every binding, prepare input message element name to (methodName, output message element name) mapping\n      let bindings = self.definitions.bindings;\n      for (let bindingName in bindings) {\n        let binding = bindings[bindingName];\n        if (typeof binding.style === 'undefined') {\n          binding.style = 'document';\n        }\n        if (binding.style !== 'document')\n          continue;\n        let methods = binding.methods;\n        let topEls = binding.topElements = {};\n        for (let methodName in methods) {\n          if (methods[methodName].input) {\n            let inputName = methods[methodName].input.$name;\n            let outputName = \"\";\n            if (methods[methodName].output)\n              outputName = methods[methodName].output.$name;\n            topEls[inputName] = { \"methodName\": methodName, \"outputName\": outputName };\n          }\n        }\n      }\n\n      // prepare soap envelope xmlns definition string\n      self.xmlnsInEnvelope = self._xmlnsMap();\n      self.callback(null, self);\n    }).catch(err => self.callback(err));\n\n  });\n\n  // process.nextTick(function() {\n  //   try {\n  //     fromFunc.call(self, definition);\n  //   } catch (e) {\n  //     return self.callback(e.message);\n  //   }\n\n  //   self.processIncludes(function(err) {\n  //     let name;\n  //     if (err) {\n  //       return self.callback(err);\n  //     }\n\n  //     self.definitions.deleteFixedAttrs();\n  //     let services = self.services = self.definitions.services;\n  //     if (services) {\n  //       for (name in services) {\n  //         services[name].postProcess(self.definitions);\n  //       }\n  //     }\n  //     let complexTypes = self.definitions.complexTypes;\n  //     if (complexTypes) {\n  //       for (name in complexTypes) {\n  //         complexTypes[name].deleteFixedAttrs();\n  //       }\n  //     }\n\n  //     // for document style, for every binding, prepare input message element name to (methodName, output message element name) mapping\n  //     let bindings = self.definitions.bindings;\n  //     for (let bindingName in bindings) {\n  //       let binding = bindings[bindingName];\n  //       if (typeof binding.style === 'undefined') {\n  //         binding.style = 'document';\n  //       }\n  //       if (binding.style !== 'document')\n  //         continue;\n  //       let methods = binding.methods;\n  //       let topEls = binding.topElements = {};\n  //       for (let methodName in methods) {\n  //         if (methods[methodName].input) {\n  //           let inputName = methods[methodName].input.$name;\n  //           let outputName=\"\";\n  //           if(methods[methodName].output )\n  //             outputName = methods[methodName].output.$name;\n  //           topEls[inputName] = {\"methodName\": methodName, \"outputName\": outputName};\n  //         }\n  //       }\n  //     }\n\n  //     // prepare soap envelope xmlns definition string\n  //     self.xmlnsInEnvelope = self._xmlnsMap();\n\n  //     self.callback(err, self);\n  //   });\n\n  // });\n};\n\nWSDL.prototype.ignoredNamespaces = ['tns', 'targetNamespace', 'typedNamespace'];\n\nWSDL.prototype.ignoreBaseNameSpaces = false;\n\nWSDL.prototype.valueKey = '$value';\nWSDL.prototype.xmlKey = '$xml';\n\nWSDL.prototype._initializeOptions = function (options) {\n  this._originalIgnoredNamespaces = (options || {}).ignoredNamespaces;\n  this.options = {};\n\n  let ignoredNamespaces = options ? options.ignoredNamespaces : null;\n\n  if (ignoredNamespaces &&\n    (Array.isArray(ignoredNamespaces.namespaces) || typeof ignoredNamespaces.namespaces === 'string')) {\n    if (ignoredNamespaces.override) {\n      this.options.ignoredNamespaces = ignoredNamespaces.namespaces;\n    } else {\n      this.options.ignoredNamespaces = this.ignoredNamespaces.concat(ignoredNamespaces.namespaces);\n    }\n  } else {\n    this.options.ignoredNamespaces = this.ignoredNamespaces;\n  }\n\n  this.options.valueKey = options.valueKey || this.valueKey;\n  this.options.xmlKey = options.xmlKey || this.xmlKey;\n  if (options.escapeXML !== undefined) {\n    this.options.escapeXML = options.escapeXML;\n  } else {\n    this.options.escapeXML = true;\n  }\n  if (options.returnFault !== undefined) {\n    this.options.returnFault = options.returnFault;\n  } else {\n    this.options.returnFault = false;\n  }\n  this.options.handleNilAsNull = !!options.handleNilAsNull;\n\n  if (options.namespaceArrayElements !== undefined) {\n    this.options.namespaceArrayElements = options.namespaceArrayElements;\n  } else {\n    this.options.namespaceArrayElements = true;\n  }\n\n  // Allow any request headers to keep passing through\n  this.options.wsdl_headers = options.wsdl_headers;\n  this.options.wsdl_options = options.wsdl_options;\n  if (options.httpClient) {\n    this.options.httpClient = options.httpClient;\n  }\n\n  // The supplied request-object should be passed through\n  if (options.request) {\n    this.options.request = options.request;\n  }\n\n  let ignoreBaseNameSpaces = options ? options.ignoreBaseNameSpaces : null;\n  if (ignoreBaseNameSpaces !== null && typeof ignoreBaseNameSpaces !== 'undefined') {\n    this.options.ignoreBaseNameSpaces = ignoreBaseNameSpaces;\n  } else {\n    this.options.ignoreBaseNameSpaces = this.ignoreBaseNameSpaces;\n  }\n\n  // Works only in client\n  this.options.forceSoap12Headers = options.forceSoap12Headers;\n  this.options.customDeserializer = options.customDeserializer;\n\n  if (options.overrideRootElement !== undefined) {\n    this.options.overrideRootElement = options.overrideRootElement;\n  }\n\n  this.options.useEmptyTag = !!options.useEmptyTag;\n};\n\nWSDL.prototype.onReady = function (callback) {\n  if (callback)\n    this.callback = callback;\n};\n\nWSDL.prototype._processNextInclude = async function (includes) {\n  let self = this,\n    include = includes.shift(),\n    options;\n\n  if (!include)\n    return; // callback();\n\n  let includePath;\n  if (!/^https?:/.test(self.uri) && !/^https?:/.test(include.location)) {\n    // includePath = path.resolve(path.dirname(self.uri), include.location);\n  } else {\n    includePath = url.resolve(self.uri || '', include.location);\n  }\n\n  options = _.assign({}, this.options);\n  // follow supplied ignoredNamespaces option\n  options.ignoredNamespaces = this._originalIgnoredNamespaces || this.options.ignoredNamespaces;\n  options.WSDL_CACHE = this.WSDL_CACHE;\n\n  const wsdl = await open_wsdl_recursive(includePath, options)\n  self._includesWsdl.push(wsdl);\n\n  if (wsdl.definitions instanceof DefinitionsElement) {\n    _.mergeWith(self.definitions, wsdl.definitions, function (a, b) {\n      return (a instanceof SchemaElement) ? a.merge(b) : undefined;\n    });\n  } else {\n    self.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace] = deepMerge(self.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace], wsdl.definitions);\n  }\n\n  return self._processNextInclude(includes);\n\n  // open_wsdl_recursive(includePath, options, function(err, wsdl) {\n  //   if (err) {\n  //     return callback(err);\n  //   }\n\n  //   self._includesWsdl.push(wsdl);\n\n  //   if (wsdl.definitions instanceof DefinitionsElement) {\n  //     _.mergeWith(self.definitions, wsdl.definitions, function(a,b) {\n  //       return (a instanceof SchemaElement) ? a.merge(b) : undefined;\n  //     });\n  //   } else {\n  //     self.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace] = deepMerge(self.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace], wsdl.definitions);\n  //   }\n  //   self._processNextInclude(includes, function(err) {\n  //     callback(err);\n  //   });\n  // });\n};\n\nWSDL.prototype.processIncludes = async function () {\n  let schemas = this.definitions.schemas,\n    includes = [];\n\n  for (let ns in schemas) {\n    let schema = schemas[ns];\n    includes = includes.concat(schema.includes || []);\n  }\n\n  return this._processNextInclude(includes);\n};\n\nWSDL.prototype.describeServices = function () {\n  let services = {};\n  for (let name in this.services) {\n    let service = this.services[name];\n    services[name] = service.description(this.definitions);\n  }\n  return services;\n};\n\nWSDL.prototype.toXML = function () {\n  return this.xml || '';\n};\n\nWSDL.prototype.xmlToObject = function (xml, callback) {\n  let self = this;\n  let p = typeof callback === 'function' ? {} : sax.parser(true);\n  let objectName = null;\n  let root: any = {};\n  let schema = {\n    Envelope: {\n      Header: {\n        Security: {\n          UsernameToken: {\n            Username: 'string',\n            Password: 'string'\n          }\n        }\n      },\n      Body: {\n        Fault: {\n          faultcode: 'string',\n          faultstring: 'string',\n          detail: 'string'\n        }\n      }\n    }\n  };\n  let stack: any[] = [{ name: null, object: root, schema: schema }];\n  let xmlns: any = {};\n\n  let refs = {}, id; // {id:{hrefs:[],obj:}, ...}\n\n  p.onopentag = function (node) {\n    let nsName = node.name;\n    let attrs: any = node.attributes;\n    let name = splitQName(nsName).name,\n      attributeName,\n      top = stack[stack.length - 1],\n      topSchema = top.schema,\n      elementAttributes = {},\n      hasNonXmlnsAttribute = false,\n      hasNilAttribute = false,\n      obj = {};\n    let originalName = name;\n\n    if (!objectName && top.name === 'Body' && name !== 'Fault') {\n      let message = self.definitions.messages[name];\n      // Support RPC/literal messages where response body contains one element named\n      // after the operation + 'Response'. See http://www.w3.org/TR/wsdl#_names\n      if (!message) {\n        try {\n          // Determine if this is request or response\n          let isInput = false;\n          let isOutput = false;\n          if ((/Response$/).test(name)) {\n            isOutput = true;\n            name = name.replace(/Response$/, '');\n          } else if ((/Request$/).test(name)) {\n            isInput = true;\n            name = name.replace(/Request$/, '');\n          } else if ((/Solicit$/).test(name)) {\n            isInput = true;\n            name = name.replace(/Solicit$/, '');\n          }\n          // Look up the appropriate message as given in the portType's operations\n          let portTypes = self.definitions.portTypes;\n          let portTypeNames = Object.keys(portTypes);\n          // Currently this supports only one portType definition.\n          let portType = portTypes[portTypeNames[0]];\n          if (isInput) {\n            name = portType.methods[name].input.$name;\n          } else {\n            name = portType.methods[name].output.$name;\n          }\n          message = self.definitions.messages[name];\n          // 'cache' this alias to speed future lookups\n          self.definitions.messages[originalName] = self.definitions.messages[name];\n        } catch (e) {\n          if (self.options.returnFault) {\n            p.onerror(e);\n          }\n        }\n      }\n\n      topSchema = message.description(self.definitions);\n      objectName = originalName;\n    }\n\n    if (attrs.href) {\n      id = attrs.href.substr(1);\n      if (!refs[id]) {\n        refs[id] = { hrefs: [], obj: null };\n      }\n      refs[id].hrefs.push({ par: top.object, key: name, obj: obj });\n    }\n    if (id = attrs.id) {\n      if (!refs[id]) {\n        refs[id] = { hrefs: [], obj: null };\n      }\n    }\n\n    //Handle element attributes\n    for (attributeName in attrs) {\n      if (/^xmlns:|^xmlns$/.test(attributeName)) {\n        xmlns[splitQName(attributeName).name] = attrs[attributeName];\n        continue;\n      }\n      hasNonXmlnsAttribute = true;\n      elementAttributes[attributeName] = attrs[attributeName];\n    }\n\n    for (attributeName in elementAttributes) {\n      let res = splitQName(attributeName);\n      if (res.name === 'nil' && xmlns[res.prefix] === 'http://www.w3.org/2001/XMLSchema-instance' && elementAttributes[attributeName] &&\n        (elementAttributes[attributeName].toLowerCase() === 'true' || elementAttributes[attributeName] === '1')\n      ) {\n        hasNilAttribute = true;\n        break;\n      }\n    }\n\n    if (hasNonXmlnsAttribute) {\n      obj[self.options.attributesKey] = elementAttributes;\n    }\n\n    // Pick up the schema for the type specified in element's xsi:type attribute.\n    let xsiTypeSchema;\n    let xsiType = elementAttributes['xsi:type'];\n    if (xsiType) {\n      let type = splitQName(xsiType);\n      let typeURI;\n      if (type.prefix === TNS_PREFIX) {\n        // In case of xsi:type = \"MyType\"\n        typeURI = xmlns[type.prefix] || xmlns.xmlns;\n      } else {\n        typeURI = xmlns[type.prefix];\n      }\n      let typeDef = self.findSchemaObject(typeURI, type.name);\n      if (typeDef) {\n        xsiTypeSchema = typeDef.description(self.definitions);\n      }\n    }\n\n    if (topSchema && topSchema[name + '[]']) {\n      name = name + '[]';\n    }\n    stack.push({\n      name: originalName,\n      object: obj,\n      schema: (xsiTypeSchema || (topSchema && topSchema[name])),\n      id: attrs.id,\n      nil: hasNilAttribute\n    });\n  };\n\n  p.onclosetag = function (nsName) {\n    let cur: any = stack.pop(),\n      obj = cur.object,\n      top = stack[stack.length - 1],\n      topObject = top.object,\n      topSchema = top.schema,\n      name = splitQName(nsName).name;\n\n    if (typeof cur.schema === 'string' && (cur.schema === 'string' || (<string>cur.schema).split(':')[1] === 'string')) {\n      if (typeof obj === 'object' && Object.keys(obj).length === 0) obj = cur.object = '';\n    }\n\n    if (cur.nil === true) {\n      if (self.options.handleNilAsNull) {\n        obj = null;\n      } else {\n        return;\n      }\n    }\n\n    if (_.isPlainObject(obj) && !Object.keys(obj).length) {\n      obj = null;\n    }\n\n    if (topSchema && topSchema[name + '[]']) {\n      if (!topObject[name]) {\n        topObject[name] = [];\n      }\n      topObject[name].push(obj);\n    } else if (name in topObject) {\n      if (!Array.isArray(topObject[name])) {\n        topObject[name] = [topObject[name]];\n      }\n      topObject[name].push(obj);\n    } else {\n      topObject[name] = obj;\n    }\n\n    if (cur.id) {\n      refs[cur.id].obj = obj;\n    }\n  };\n\n  p.oncdata = function (text) {\n    let originalText = text;\n    text = trim(text);\n    if (!text.length) {\n      return;\n    }\n\n    if (/<\\?xml[\\s\\S]+\\?>/.test(text)) {\n      let top = stack[stack.length - 1];\n      let value = self.xmlToObject(text);\n      if (top.object[self.options.attributesKey]) {\n        top.object[self.options.valueKey] = value;\n      } else {\n        top.object = value;\n      }\n    } else {\n      p.ontext(originalText);\n    }\n  };\n\n  p.onerror = function (e) {\n    p.resume();\n    throw {\n      Fault: {\n        faultcode: 500,\n        faultstring: 'Invalid XML',\n        detail: new Error(e).message,\n        statusCode: 500\n      }\n    };\n  };\n\n  p.ontext = function (text) {\n    let originalText = text;\n    text = trim(text);\n    if (!text.length) {\n      return;\n    }\n\n    let top = stack[stack.length - 1];\n    let name = splitQName(top.schema).name,\n      value;\n    if (self.options && self.options.customDeserializer && self.options.customDeserializer[name]) {\n      value = self.options.customDeserializer[name](text, top);\n    }\n    else {\n      if (name === 'int' || name === 'integer') {\n        value = parseInt(text, 10);\n      } else if (name === 'bool' || name === 'boolean') {\n        value = text.toLowerCase() === 'true' || text === '1';\n      } else if (name === 'dateTime' || name === 'date') {\n        value = new Date(text);\n      } else {\n        if (self.options.preserveWhitespace) {\n          text = originalText;\n        }\n        // handle string or other types\n        if (typeof top.object !== 'string') {\n          value = text;\n        } else {\n          value = top.object + text;\n        }\n      }\n    }\n\n    if (top.object[self.options.attributesKey]) {\n      top.object[self.options.valueKey] = value;\n    } else {\n      top.object = value;\n    }\n  };\n\n  if (typeof callback === 'function') {\n    // we be streaming\n    let saxStream = sax.createStream(true);\n    saxStream.on('opentag', p.onopentag);\n    saxStream.on('closetag', p.onclosetag);\n    saxStream.on('cdata', p.oncdata);\n    saxStream.on('text', p.ontext);\n    xml.pipe(saxStream)\n      .on('error', function (err) {\n        callback(err);\n      })\n      .on('end', function () {\n        let r;\n        try {\n          r = finish();\n        } catch (e) {\n          return callback(e);\n        }\n        callback(null, r);\n      });\n    return;\n  }\n  p.write(xml).close();\n\n  return finish();\n\n  function finish() {\n    // MultiRef support: merge objects instead of replacing\n    for (let n in refs) {\n      let ref = refs[n];\n      for (let i = 0; i < ref.hrefs.length; i++) {\n        _.assign(ref.hrefs[i].obj, ref.obj);\n      }\n    }\n\n    if (root.Envelope) {\n      let body = root.Envelope.Body;\n      if (body && body.Fault) {\n        let code = body.Fault.faultcode && body.Fault.faultcode.$value;\n        let string = body.Fault.faultstring && body.Fault.faultstring.$value;\n        let detail = body.Fault.detail && body.Fault.detail.$value;\n\n        code = code || body.Fault.faultcode;\n        string = string || body.Fault.faultstring;\n        detail = detail || body.Fault.detail;\n\n        let error: any = new Error(code + ': ' + string + (detail ? ': ' + detail : ''));\n\n        error.root = root;\n        throw error;\n      }\n      return root.Envelope;\n    }\n    return root;\n  }\n};\n\n/**\n * Look up a XSD type or element by namespace URI and name\n * @param {String} nsURI Namespace URI\n * @param {String} qname Local or qualified name\n * @returns {*} The XSD type/element definition\n */\nWSDL.prototype.findSchemaObject = function (nsURI, qname) {\n  if (!nsURI || !qname) {\n    return null;\n  }\n\n  let def = null;\n\n  if (this.definitions.schemas) {\n    let schema = this.definitions.schemas[nsURI];\n    if (schema) {\n      if (qname.indexOf(':') !== -1) {\n        qname = qname.substring(qname.indexOf(':') + 1, qname.length);\n      }\n\n      // if the client passed an input element which has a `$lookupType` property instead of `$type`\n      // the `def` is found in `schema.elements`.\n      def = schema.complexTypes[qname] || schema.types[qname] || schema.elements[qname];\n    }\n  }\n\n  return def;\n};\n\n/**\n * Create document style xml string from the parameters\n * @param {String} name\n * @param {*} params\n * @param {String} nsPrefix\n * @param {String} nsURI\n * @param {String} type\n */\nWSDL.prototype.objectToDocumentXML = function (name, params, nsPrefix, nsURI, type) {\n  //If user supplies XML already, just use that.  XML Declaration should not be present.\n  if (params && params._xml) {\n    return params._xml;\n  }\n  let args = {};\n  args[name] = params;\n  let parameterTypeObj = type ? this.findSchemaObject(nsURI, type) : null;\n  return this.objectToXML(args, null, nsPrefix, nsURI, true, null, parameterTypeObj);\n};\n\n/**\n * Create RPC style xml string from the parameters\n * @param {String} name\n * @param {*} params\n * @param {String} nsPrefix\n * @param {String} nsURI\n * @returns {string}\n */\nWSDL.prototype.objectToRpcXML = function (name, params, nsPrefix, nsURI, isParts) {\n  let parts = [];\n  let defs = this.definitions;\n  let nsAttrName = '_xmlns';\n\n  nsPrefix = nsPrefix || findPrefix(defs.xmlns, nsURI);\n\n  nsURI = nsURI || defs.xmlns[nsPrefix];\n  nsPrefix = nsPrefix === TNS_PREFIX ? '' : (nsPrefix + ':');\n\n  parts.push(['<', nsPrefix, name, '>'].join(''));\n\n  for (let key in params) {\n    if (!params.hasOwnProperty(key)) {\n      continue;\n    }\n    if (key !== nsAttrName) {\n      let value = params[key];\n      let prefixedKey = (isParts ? '' : nsPrefix) + key;\n      let attributes = [];\n      if (typeof value === 'object' && value.hasOwnProperty(this.options.attributesKey)) {\n        let attrs = value[this.options.attributesKey];\n        for (let n in attrs) {\n          attributes.push(' ' + n + '=' + '\"' + attrs[n] + '\"');\n        }\n      }\n      parts.push(['<', prefixedKey].concat(attributes).concat('>').join(''));\n      parts.push((typeof value === 'object') ? this.objectToXML(value, key, nsPrefix, nsURI) : xmlEscape(value));\n      parts.push(['</', prefixedKey, '>'].join(''));\n    }\n  }\n  parts.push(['</', nsPrefix, name, '>'].join(''));\n  return parts.join('');\n};\n\n\nfunction appendColon(ns) {\n  return (ns && ns.charAt(ns.length - 1) !== ':') ? ns + ':' : ns;\n}\n\nfunction noColonNameSpace(ns) {\n  return (ns && ns.charAt(ns.length - 1) === ':') ? ns.substring(0, ns.length - 1) : ns;\n}\n\nWSDL.prototype.isIgnoredNameSpace = function (ns) {\n  return this.options.ignoredNamespaces.indexOf(ns) > -1;\n};\n\nWSDL.prototype.filterOutIgnoredNameSpace = function (ns) {\n  let namespace = noColonNameSpace(ns);\n  return this.isIgnoredNameSpace(namespace) ? '' : namespace;\n};\n\n\n\n/**\n * Convert an object to XML.  This is a recursive method as it calls itself.\n *\n * @param {Object} obj the object to convert.\n * @param {String} name the name of the element (if the object being traversed is\n * an element).\n * @param {String} nsPrefix the namespace prefix of the object I.E. xsd.\n * @param {String} nsURI the full namespace of the object I.E. http://w3.org/schema.\n * @param {Boolean} isFirst whether or not this is the first item being traversed.\n * @param {?} xmlnsAttr\n * @param {?} parameterTypeObject\n * @param {NamespaceContext} nsContext Namespace context\n */\nWSDL.prototype.objectToXML = function (obj, name, nsPrefix, nsURI, isFirst, xmlnsAttr, schemaObject, nsContext) {\n  let self = this;\n  let schema = this.definitions.schemas[nsURI];\n\n  let parentNsPrefix = nsPrefix ? nsPrefix.parent : undefined;\n  if (typeof parentNsPrefix !== 'undefined') {\n    //we got the parentNsPrefix for our array. setting the namespace-letiable back to the current namespace string\n    nsPrefix = nsPrefix.current;\n  }\n\n  parentNsPrefix = noColonNameSpace(parentNsPrefix);\n  if (this.isIgnoredNameSpace(parentNsPrefix)) {\n    parentNsPrefix = '';\n  }\n\n  let soapHeader = !schema;\n  let qualified = schema && schema.$elementFormDefault === 'qualified';\n  let parts = [];\n  let prefixNamespace = (nsPrefix || qualified) && nsPrefix !== TNS_PREFIX;\n\n  let xmlnsAttrib = '';\n  if (nsURI && isFirst) {\n    if (self.options.overrideRootElement && self.options.overrideRootElement.xmlnsAttributes) {\n      self.options.overrideRootElement.xmlnsAttributes.forEach(function (attribute) {\n        xmlnsAttrib += ' ' + attribute.name + '=\"' + attribute.value + '\"';\n      });\n    } else {\n      if (prefixNamespace && !this.isIgnoredNameSpace(nsPrefix)) {\n        // resolve the prefix namespace\n        xmlnsAttrib += ' xmlns:' + nsPrefix + '=\"' + nsURI + '\"';\n      }\n      // only add default namespace if the schema elementFormDefault is qualified\n      if (qualified || soapHeader) xmlnsAttrib += ' xmlns=\"' + nsURI + '\"';\n    }\n  }\n\n  if (!nsContext) {\n    nsContext = new NamespaceContext();\n    nsContext.declareNamespace(nsPrefix, nsURI);\n  } else {\n    nsContext.pushContext();\n  }\n\n  // explicitly use xmlns attribute if available\n  if (xmlnsAttr && !(self.options.overrideRootElement && self.options.overrideRootElement.xmlnsAttributes)) {\n    xmlnsAttrib = xmlnsAttr;\n  }\n\n  let ns = '';\n\n  if (self.options.overrideRootElement && isFirst) {\n    ns = self.options.overrideRootElement.namespace;\n  } else if (prefixNamespace && (qualified || isFirst || soapHeader) && !this.isIgnoredNameSpace(nsPrefix)) {\n    ns = nsPrefix;\n  }\n\n  let i, n;\n  // start building out XML string.\n  if (Array.isArray(obj)) {\n    for (i = 0, n = obj.length; i < n; i++) {\n      let item = obj[i];\n      let arrayAttr = self.processAttributes(item, nsContext),\n        correctOuterNsPrefix = parentNsPrefix || ns; //using the parent namespace prefix if given\n\n      let body = self.objectToXML(item, name, nsPrefix, nsURI, false, null, schemaObject, nsContext);\n\n      let openingTagParts = ['<', appendColon(correctOuterNsPrefix), name, arrayAttr, xmlnsAttrib];\n\n      if (body === '' && self.options.useEmptyTag) {\n        // Use empty (self-closing) tags if no contents\n        openingTagParts.push(' />');\n        parts.push(openingTagParts.join(''));\n      } else {\n        openingTagParts.push('>');\n        if (self.options.namespaceArrayElements || i === 0) {\n          parts.push(openingTagParts.join(''));\n        }\n        parts.push(body);\n        if (self.options.namespaceArrayElements || i === n - 1) {\n          parts.push(['</', appendColon(correctOuterNsPrefix), name, '>'].join(''));\n        }\n      }\n    }\n  } else if (typeof obj === 'object') {\n    for (name in obj) {\n      if (!obj.hasOwnProperty(name)) continue;\n      //don't process attributes as element\n      if (name === self.options.attributesKey) {\n        continue;\n      }\n      //Its the value of a xml object. Return it directly.\n      if (name === self.options.xmlKey) {\n        nsContext.popContext();\n        return obj[name];\n      }\n      //Its the value of an item. Return it directly.\n      if (name === self.options.valueKey) {\n        nsContext.popContext();\n        return xmlEscape(obj[name]);\n      }\n\n      let child = obj[name];\n      if (typeof child === 'undefined') {\n        continue;\n      }\n\n      let attr = self.processAttributes(child, nsContext);\n\n      let value = '';\n      let nonSubNameSpace = '';\n      let emptyNonSubNameSpace = false;\n\n      let nameWithNsRegex = /^([^:]+):([^:]+)$/.exec(name);\n      if (nameWithNsRegex) {\n        nonSubNameSpace = nameWithNsRegex[1] + ':';\n        name = nameWithNsRegex[2];\n      } else if (name[0] === ':') {\n        emptyNonSubNameSpace = true;\n        name = name.substr(1);\n      }\n\n      if (isFirst) {\n        value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, schemaObject, nsContext);\n      } else {\n\n        if (self.definitions.schemas) {\n          if (schema) {\n            let childSchemaObject = self.findChildSchemaObject(schemaObject, name);\n            //find sub namespace if not a primitive\n            if (childSchemaObject &&\n              ((childSchemaObject.$type && (childSchemaObject.$type.indexOf('xsd:') === -1)) ||\n                childSchemaObject.$ref || childSchemaObject.$name)) {\n              /*if the base name space of the children is not in the ingoredSchemaNamspaces we use it.\n               This is because in some services the child nodes do not need the baseNameSpace.\n               */\n\n              let childNsPrefix: any = '';\n              let childName = '';\n              let childNsURI;\n              let childXmlnsAttrib = '';\n\n              let elementQName = childSchemaObject.$ref || childSchemaObject.$name;\n              if (elementQName) {\n                elementQName = splitQName(elementQName);\n                childName = elementQName.name;\n                if (elementQName.prefix === TNS_PREFIX) {\n                  // Local element\n                  childNsURI = childSchemaObject.$targetNamespace;\n                  childNsPrefix = nsContext.registerNamespace(childNsURI);\n                  if (this.isIgnoredNameSpace(childNsPrefix)) {\n                    childNsPrefix = nsPrefix;\n                  }\n                } else {\n                  childNsPrefix = elementQName.prefix;\n                  if (this.isIgnoredNameSpace(childNsPrefix)) {\n                    childNsPrefix = nsPrefix;\n                  }\n                  childNsURI = schema.xmlns[childNsPrefix] || self.definitions.xmlns[childNsPrefix];\n                }\n\n                let unqualified = false;\n                // Check qualification form for local elements\n                if (childSchemaObject.$name && childSchemaObject.targetNamespace === undefined) {\n                  if (childSchemaObject.$form === 'unqualified') {\n                    unqualified = true;\n                  } else if (childSchemaObject.$form === 'qualified') {\n                    unqualified = false;\n                  } else {\n                    unqualified = schema.$elementFormDefault !== 'qualified';\n                  }\n                }\n                if (unqualified) {\n                  childNsPrefix = '';\n                }\n\n                if (childNsURI && childNsPrefix) {\n                  if (nsContext.declareNamespace(childNsPrefix, childNsURI)) {\n                    childXmlnsAttrib = ' xmlns:' + childNsPrefix + '=\"' + childNsURI + '\"';\n                    xmlnsAttrib += childXmlnsAttrib;\n                  }\n                }\n              }\n\n              let resolvedChildSchemaObject;\n              if (childSchemaObject.$type) {\n                let typeQName = splitQName(childSchemaObject.$type);\n                let typePrefix = typeQName.prefix;\n                let typeURI = schema.xmlns[typePrefix] || self.definitions.xmlns[typePrefix];\n                childNsURI = typeURI;\n                if (typeURI !== 'http://www.w3.org/2001/XMLSchema' && typePrefix !== TNS_PREFIX) {\n                  // Add the prefix/namespace mapping, but not declare it\n                  nsContext.addNamespace(typePrefix, typeURI);\n                }\n                resolvedChildSchemaObject =\n                  self.findSchemaType(typeQName.name, typeURI) || childSchemaObject;\n              } else {\n                resolvedChildSchemaObject =\n                  self.findSchemaObject(childNsURI, childName) || childSchemaObject;\n              }\n\n              if (childSchemaObject.$baseNameSpace && this.options.ignoreBaseNameSpaces) {\n                childNsPrefix = nsPrefix;\n                childNsURI = nsURI;\n              }\n\n              if (this.options.ignoreBaseNameSpaces) {\n                childNsPrefix = '';\n                childNsURI = '';\n              }\n\n              ns = childNsPrefix;\n\n              if (Array.isArray(child)) {\n                //for arrays, we need to remember the current namespace\n                childNsPrefix = {\n                  current: childNsPrefix,\n                  parent: ns\n                };\n              } else {\n                //parent (array) already got the namespace\n                childXmlnsAttrib = null;\n              }\n\n              value = self.objectToXML(child, name, childNsPrefix, childNsURI,\n                false, childXmlnsAttrib, resolvedChildSchemaObject, nsContext);\n            } else if (obj[self.options.attributesKey] && obj[self.options.attributesKey].xsi_type) {\n              //if parent object has complex type defined and child not found in parent\n              let completeChildParamTypeObject = self.findChildSchemaObject(\n                obj[self.options.attributesKey].xsi_type.type,\n                obj[self.options.attributesKey].xsi_type.xmlns);\n\n              nonSubNameSpace = obj[self.options.attributesKey].xsi_type.prefix;\n              nsContext.addNamespace(obj[self.options.attributesKey].xsi_type.prefix,\n                obj[self.options.attributesKey].xsi_type.xmlns);\n              value = self.objectToXML(child, name, obj[self.options.attributesKey].xsi_type.prefix,\n                obj[self.options.attributesKey].xsi_type.xmlns, false, null, null, nsContext);\n            } else {\n              if (Array.isArray(child)) {\n                name = nonSubNameSpace + name;\n              }\n\n              value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, null, nsContext);\n            }\n          } else {\n            value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, null, nsContext);\n          }\n        }\n      }\n\n      ns = noColonNameSpace(ns);\n      if (prefixNamespace && !qualified && isFirst && !self.options.overrideRootElement) {\n        ns = nsPrefix;\n      } else if (this.isIgnoredNameSpace(ns)) {\n        ns = '';\n      }\n\n      let useEmptyTag = !value && self.options.useEmptyTag;\n      if (!Array.isArray(child)) {\n        // start tag\n        parts.push(['<', emptyNonSubNameSpace ? '' : appendColon(nonSubNameSpace || ns), name, attr, xmlnsAttrib,\n          (child === null ? ' xsi:nil=\"true\"' : ''),\n          useEmptyTag ? ' />' : '>'\n        ].join(''));\n      }\n\n      if (!useEmptyTag) {\n        parts.push(value);\n        if (!Array.isArray(child)) {\n          // end tag\n          parts.push(['</', emptyNonSubNameSpace ? '' : appendColon(nonSubNameSpace || ns), name, '>'].join(''));\n        }\n      }\n    }\n  } else if (obj !== undefined) {\n    parts.push((self.options.escapeXML) ? xmlEscape(obj) : obj);\n  }\n  nsContext.popContext();\n  return parts.join('');\n};\n\nWSDL.prototype.processAttributes = function (child, nsContext) {\n  let attr = '';\n\n  if (child === null) {\n    child = [];\n  }\n\n  let attrObj = child[this.options.attributesKey];\n  if (attrObj && attrObj.xsi_type) {\n    let xsiType = attrObj.xsi_type;\n\n    let prefix = xsiType.prefix || xsiType.namespace;\n    // Generate a new namespace for complex extension if one not provided\n    if (!prefix) {\n      prefix = nsContext.registerNamespace(xsiType.xmlns);\n    } else {\n      nsContext.declareNamespace(prefix, xsiType.xmlns);\n    }\n    xsiType.prefix = prefix;\n  }\n\n\n  if (attrObj) {\n    for (let attrKey in attrObj) {\n      //handle complex extension separately\n      if (attrKey === 'xsi_type') {\n        let attrValue = attrObj[attrKey];\n        attr += ' xsi:type=\"' + attrValue.prefix + ':' + attrValue.type + '\"';\n        attr += ' xmlns:' + attrValue.prefix + '=\"' + attrValue.xmlns + '\"';\n\n        continue;\n      } else {\n        attr += ' ' + attrKey + '=\"' + xmlEscape(attrObj[attrKey]) + '\"';\n      }\n    }\n  }\n\n  return attr;\n};\n\n/**\n * Look up a schema type definition\n * @param name\n * @param nsURI\n * @returns {*}\n */\nWSDL.prototype.findSchemaType = function (name, nsURI) {\n  if (!this.definitions.schemas || !name || !nsURI) {\n    return null;\n  }\n\n  let schema = this.definitions.schemas[nsURI];\n  if (!schema || !schema.complexTypes) {\n    return null;\n  }\n\n  return schema.complexTypes[name];\n};\n\nWSDL.prototype.findChildSchemaObject = function (parameterTypeObj, childName, backtrace) {\n  if (!parameterTypeObj || !childName) {\n    return null;\n  }\n\n  if (!backtrace) {\n    backtrace = [];\n  }\n\n  if (backtrace.indexOf(parameterTypeObj) >= 0) {\n    // We've recursed back to ourselves; break.\n    return null;\n  } else {\n    backtrace = backtrace.concat([parameterTypeObj]);\n  }\n\n  let found = null,\n    i = 0,\n    child,\n    ref;\n\n  if (Array.isArray(parameterTypeObj.$lookupTypes) && parameterTypeObj.$lookupTypes.length) {\n    let types = parameterTypeObj.$lookupTypes;\n\n    for (i = 0; i < types.length; i++) {\n      let typeObj = types[i];\n\n      if (typeObj.$name === childName) {\n        found = typeObj;\n        break;\n      }\n    }\n  }\n\n  let object = parameterTypeObj;\n  if (object.$name === childName && object.name === 'element') {\n    return object;\n  }\n  if (object.$ref) {\n    ref = splitQName(object.$ref);\n    if (ref.name === childName) {\n      return object;\n    }\n  }\n\n  let childNsURI;\n\n  // want to avoid unecessary recursion to improve performance\n  if (object.$type && backtrace.length === 1) {\n    let typeInfo = splitQName(object.$type);\n    if (typeInfo.prefix === TNS_PREFIX) {\n      childNsURI = parameterTypeObj.$targetNamespace;\n    } else {\n      childNsURI = this.definitions.xmlns[typeInfo.prefix];\n    }\n    let typeDef = this.findSchemaType(typeInfo.name, childNsURI);\n    if (typeDef) {\n      return this.findChildSchemaObject(typeDef, childName, backtrace);\n    }\n  }\n\n  if (object.children) {\n    for (i = 0, child; child = object.children[i]; i++) {\n      found = this.findChildSchemaObject(child, childName, backtrace);\n      if (found) {\n        break;\n      }\n\n      if (child.$base) {\n        let baseQName = splitQName(child.$base);\n        let childNameSpace = baseQName.prefix === TNS_PREFIX ? '' : baseQName.prefix;\n        childNsURI = child.xmlns[baseQName.prefix] || this.definitions.xmlns[baseQName.prefix];\n\n        let foundBase = this.findSchemaType(baseQName.name, childNsURI);\n\n        if (foundBase) {\n          found = this.findChildSchemaObject(foundBase, childName, backtrace);\n\n          if (found) {\n            found.$baseNameSpace = childNameSpace;\n            found.$type = childNameSpace + ':' + childName;\n            break;\n          }\n        }\n      }\n    }\n\n  }\n\n  if (!found && object.$name === childName) {\n    return object;\n  }\n\n  return found;\n};\n\nWSDL.prototype._parse = function (xml) {\n  let self = this,\n    p = sax.parser(true),\n    stack = [],\n    root = null,\n    types = null,\n    schema = null,\n    options = self.options;\n\n  p.onopentag = function (node) {\n    let nsName = node.name;\n    let attrs = node.attributes;\n\n    let top = stack[stack.length - 1];\n    let name;\n    if (top) {\n      try {\n        top.startElement(stack, nsName, attrs, options);\n      } catch (e) {\n        if (self.options.strict) {\n          throw e;\n        } else {\n          stack.push(new Element(nsName, attrs, options));\n        }\n      }\n    } else {\n      name = splitQName(nsName).name;\n      if (name === 'definitions') {\n        root = new DefinitionsElement(nsName, attrs, options);\n        stack.push(root);\n      } else if (name === 'schema') {\n        // Shim a structure in here to allow the proper objects to be created when merging back.\n        root = new DefinitionsElement('definitions', {}, {});\n        types = new TypesElement('types', {}, {});\n        schema = new SchemaElement(nsName, attrs, options);\n        types.addChild(schema);\n        root.addChild(types);\n        stack.push(schema);\n      } else {\n        throw new Error('Unexpected root element of WSDL or include');\n      }\n    }\n  };\n\n  p.onclosetag = function (name) {\n    let top = stack[stack.length - 1];\n    assert(top, 'Unmatched close tag: ' + name);\n\n    top.endElement(stack, name);\n  };\n\n  p.write(xml).close();\n\n  return root;\n};\n\nWSDL.prototype._fromXML = function (xml) {\n  this.definitions = this._parse(xml);\n  this.definitions.descriptions = {\n    types: {}\n  };\n  this.xml = xml;\n};\n\nWSDL.prototype._fromServices = function (services) {\n\n};\n\n\n\nWSDL.prototype._xmlnsMap = function () {\n  let xmlns = this.definitions.xmlns;\n  let str = '';\n  for (let alias in xmlns) {\n    if (alias === '' || alias === TNS_PREFIX) {\n      continue;\n    }\n    let ns = xmlns[alias];\n    switch (ns) {\n      case \"http://xml.apache.org/xml-soap\": // apachesoap\n      case \"http://schemas.xmlsoap.org/wsdl/\": // wsdl\n      case \"http://schemas.xmlsoap.org/wsdl/soap/\": // wsdlsoap\n      case \"http://schemas.xmlsoap.org/wsdl/soap12/\": // wsdlsoap12\n      case \"http://schemas.xmlsoap.org/soap/encoding/\": // soapenc\n      case \"http://www.w3.org/2001/XMLSchema\": // xsd\n        continue;\n    }\n    if (~ns.indexOf('http://schemas.xmlsoap.org/')) {\n      continue;\n    }\n    if (~ns.indexOf('http://www.w3.org/')) {\n      continue;\n    }\n    if (~ns.indexOf('http://xml.apache.org/')) {\n      continue;\n    }\n    str += ' xmlns:' + alias + '=\"' + ns + '\"';\n  }\n  return str;\n};\n\n/*\n * Have another function to load previous WSDLs as we\n * don't want this to be invoked externally (expect for tests)\n * This will attempt to fix circular dependencies with XSD files,\n * Given\n * - file.wsdl\n *   - xs:import namespace=\"A\" schemaLocation: A.xsd\n * - A.xsd\n *   - xs:import namespace=\"B\" schemaLocation: B.xsd\n * - B.xsd\n *   - xs:import namespace=\"A\" schemaLocation: A.xsd\n * file.wsdl will start loading, import A, then A will import B, which will then import A\n * Because A has already started to load previously it will be returned right away and\n * have an internal circular reference\n * B would then complete loading, then A, then file.wsdl\n * By the time file A starts processing its includes its definitions will be already loaded,\n * this is the only thing that B will depend on when \"opening\" A\n */\nfunction open_wsdl_recursive(uri, options): Promise<any> {\n  let fromCache,\n    WSDL_CACHE;\n\n  // if (typeof options === 'function') {\n  //   callback = options;\n  //   options = {};\n  // }\n\n  WSDL_CACHE = options.WSDL_CACHE;\n\n  if (fromCache = WSDL_CACHE[uri]) {\n    // return callback.call(fromCache, null, fromCache);\n    return fromCache;\n  }\n\n  return open_wsdl(uri, options);\n}\n\nexport async function open_wsdl(uri, options): Promise<any> {\n  // if (typeof options === 'function') {\n  //   callback = options;\n  //   options = {};\n  // }\n\n  // initialize cache when calling open_wsdl directly\n  let WSDL_CACHE = options.WSDL_CACHE || {};\n  let request_headers = options.wsdl_headers;\n  let request_options = options.wsdl_options;\n\n  // let wsdl;\n  // if (!/^https?:/.test(uri)) {\n  //   // debug('Reading file: %s', uri);\n  //   // fs.readFile(uri, 'utf8', function(err, definition) {\n  //   //   if (err) {\n  //   //     callback(err);\n  //   //   }\n  //   //   else {\n  //   //     wsdl = new WSDL(definition, uri, options);\n  //   //     WSDL_CACHE[ uri ] = wsdl;\n  //   //     wsdl.WSDL_CACHE = WSDL_CACHE;\n  //   //     wsdl.onReady(callback);\n  //   //   }\n  //   // });\n  // }\n  // else {\n  //   debug('Reading url: %s', uri);\n  //   let httpClient = options.httpClient || new HttpClient(options);\n  //   httpClient.request(uri, null /* options */, function(err, response, definition) {\n  //     if (err) {\n  //       callback(err);\n  //     } else if (response && response.statusCode === 200) {\n  //       wsdl = new WSDL(definition, uri, options);\n  //       WSDL_CACHE[ uri ] = wsdl;\n  //       wsdl.WSDL_CACHE = WSDL_CACHE;\n  //       wsdl.onReady(callback);\n  //     } else {\n  //       callback(new Error('Invalid WSDL URL: ' + uri + \"\\n\\n\\r Code: \" + response.statusCode + \"\\n\\n\\r Response Body: \" + response.body));\n  //     }\n  //   }, request_headers, request_options);\n  // }\n  // return wsdl;\n\n  console.log('Reading url: %s', uri);\n  const httpClient: HttpClient = options.httpClient;\n  const wsdlDef = await httpClient.get(uri, { responseType: 'text' }).toPromise();\n  const wsdlObj = await new Promise((resolve) => {\n    const wsdl = new WSDL(wsdlDef, uri, options);\n    WSDL_CACHE[uri] = wsdl;\n    wsdl.WSDL_CACHE = WSDL_CACHE;\n    wsdl.onReady(resolve(wsdl));\n  });\n  console.log(\"wsdl\", wsdlObj)\n  return wsdlObj;\n}\n","/*\n * Copyright (c) 2011 Vinay Pulim <vinay@milewise.com>\n * MIT Licensed\n */\n\n// import { HttpClient }Â from './http';\nimport { HttpClient, HttpResponse }Â from '@angular/common/http';\nimport * as assert from 'assert';\nimport * as events from 'events';\nimport * as util from 'util';\n  // debug = require('debug')('node-soap');\nimport { findPrefix } from './utils';\nimport * as _ from 'lodash';\n// import concatStream from 'concat-stream';\nimport uuid4 from 'uuid/v4';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst nonIdentifierChars = /[^a-z$_0-9]/i;\n\nexport const Client = function(wsdl, endpoint, options) {\n  events.EventEmitter.call(this);\n  options = options || {};\n  this.wsdl = wsdl;\n  this._initializeOptions(options);\n  this._initializeServices(endpoint);\n  this.httpClient = options.httpClient as HttpClient;\n  const promiseOptions: any = { multiArgs: true };\n  if (options.overridePromiseSuffix) {\n    promiseOptions.suffix = options.overridePromiseSuffix;\n  }\n  Promise.all([this, promiseOptions]);\n};\nutil.inherits(Client, events.EventEmitter);\n\nClient.prototype.addSoapHeader = function(soapHeader, name, namespace, xmlns) {\n  if (!this.soapHeaders) {\n    this.soapHeaders = [];\n  }\n  if (typeof soapHeader === 'object') {\n    soapHeader = this.wsdl.objectToXML(soapHeader, name, namespace, xmlns, true);\n  }\n  return this.soapHeaders.push(soapHeader) - 1;\n};\n\nClient.prototype.changeSoapHeader = function(index, soapHeader, name, namespace, xmlns) {\n  if (!this.soapHeaders) {\n    this.soapHeaders = [];\n  }\n  if (typeof soapHeader === 'object') {\n    soapHeader = this.wsdl.objectToXML(soapHeader, name, namespace, xmlns, true);\n  }\n  this.soapHeaders[index] = soapHeader;\n};\n\nClient.prototype.getSoapHeaders = function() {\n  return this.soapHeaders;\n};\n\nClient.prototype.clearSoapHeaders = function() {\n  this.soapHeaders = null;\n};\n\nClient.prototype.addHttpHeader = function(name, value) {\n  if (!this.httpHeaders) {\n    this.httpHeaders = {};\n  }\n  this.httpHeaders[name] = value;\n};\n\nClient.prototype.getHttpHeaders = function() {\n  return this.httpHeaders;\n};\n\nClient.prototype.clearHttpHeaders = function() {\n  this.httpHeaders = {};\n};\n\n\nClient.prototype.addBodyAttribute = function(bodyAttribute, name, namespace, xmlns) {\n  if (!this.bodyAttributes) {\n    this.bodyAttributes = [];\n  }\n  if (typeof bodyAttribute === 'object') {\n    let composition = '';\n    Object.getOwnPropertyNames(bodyAttribute).forEach(function(prop, idx, array) {\n      composition += ' ' + prop + '=\"' + bodyAttribute[prop] + '\"';\n    });\n    bodyAttribute = composition;\n  }\n  if (bodyAttribute.substr(0, 1) !== ' ') bodyAttribute = ' ' + bodyAttribute;\n  this.bodyAttributes.push(bodyAttribute);\n};\n\nClient.prototype.getBodyAttributes = function() {\n  return this.bodyAttributes;\n};\n\nClient.prototype.clearBodyAttributes = function() {\n  this.bodyAttributes = null;\n};\n\nClient.prototype.setEndpoint = function(endpoint) {\n  this.endpoint = endpoint;\n  this._initializeServices(endpoint);\n};\n\nClient.prototype.describe = function() {\n  const types = this.wsdl.definitions.types;\n  return this.wsdl.describeServices();\n};\n\nClient.prototype.setSecurity = function(security) {\n  this.security = security;\n};\n\nClient.prototype.setSOAPAction = function(SOAPAction) {\n  this.SOAPAction = SOAPAction;\n};\n\nClient.prototype._initializeServices = function(endpoint) {\n  const definitions = this.wsdl.definitions,\n    services = definitions.services;\n  for (const name in services) {\n    this[name] = this._defineService(services[name], endpoint);\n  }\n};\n\nClient.prototype._initializeOptions = function(options) {\n  this.streamAllowed = options.stream;\n  this.normalizeNames = options.normalizeNames;\n  this.wsdl.options.attributesKey = options.attributesKey || 'attributes';\n  this.wsdl.options.envelopeKey = options.envelopeKey || 'soap';\n  this.wsdl.options.preserveWhitespace = !!options.preserveWhitespace;\n  if(options.ignoredNamespaces !== undefined) {\n    if(options.ignoredNamespaces.override !== undefined) {\n      if(options.ignoredNamespaces.override === true) {\n        if(options.ignoredNamespaces.namespaces !== undefined) {\n          this.wsdl.options.ignoredNamespaces = options.ignoredNamespaces.namespaces;\n        }\n      }\n    }\n  }\n  if(options.overrideRootElement !== undefined) {\n    this.wsdl.options.overrideRootElement = options.overrideRootElement;\n  }\n  this.wsdl.options.forceSoap12Headers = !!options.forceSoap12Headers;\n};\n\nClient.prototype._defineService = function(service, endpoint) {\n  const ports = service.ports,\n    def = {};\n  for (const name in ports) {\n    def[name] = this._definePort(ports[name], endpoint ? endpoint : ports[name].location);\n  }\n  return def;\n};\n\nClient.prototype._definePort = function(port, endpoint) {\n  const location = endpoint,\n    binding = port.binding,\n    methods = binding.methods,\n    def = {};\n  for (const name in methods) {\n    def[name] = this._defineMethod(methods[name], location);\n    const methodName = this.normalizeNames ? name.replace(nonIdentifierChars, '_') : name;\n    this[methodName] = def[name];\n  }\n  return def;\n};\n\nClient.prototype._defineMethod = function(method, location) {\n  const self = this;\n  let temp = null;\n  return function(args, callback, options, extraHeaders): Observable<any> {\n    if (typeof args === 'function') {\n      callback = args;\n      args = {};\n    } else if (typeof options === 'function') {\n      temp = callback;\n      callback = options;\n      options = temp;\n    } else if (typeof extraHeaders === 'function') {\n      temp = callback;\n      callback = extraHeaders;\n      extraHeaders = options;\n      options = temp;\n    }\n    // self._invoke(method, args, location, function(error, result, rawResponse, soapHeader, rawRequest) {\n    //   callback(error, result, rawResponse, soapHeader, rawRequest);\n    // }, options, extraHeaders);\n\n    return self._invoke(method, args, location, options, extraHeaders);\n  };\n};\n\nClient.prototype._invoke = function(method, args, location, options, extraHeaders): Observable<any> {\n  let self = this,\n    name = method.$name,\n    input = method.input,\n    output = method.output,\n    style = method.style,\n    defs = this.wsdl.definitions,\n    envelopeKey = this.wsdl.options.envelopeKey,\n    ns = defs.$targetNamespace,\n    encoding = '',\n    message = '',\n    xml = null,\n    req = null,\n    soapAction = null,\n    alias = findPrefix(defs.xmlns, ns),\n    headers: any = {\n      \"Content-Type\": \"text/xml; charset=utf-8\"\n    },\n    xmlnsSoap = \"xmlns:\" + envelopeKey + \"=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"\";\n\n  if (this.wsdl.options.forceSoap12Headers) {\n    headers[\"Content-Type\"] = \"application/soap+xml; charset=utf-8\";\n    xmlnsSoap = \"xmlns:\" + envelopeKey + \"=\\\"http://www.w3.org/2003/05/soap-envelope\\\"\";\n  }\n\n  if (this.SOAPAction) {\n    soapAction = this.SOAPAction;\n  } else if (method.soapAction !== undefined && method.soapAction !== null) {\n    soapAction = method.soapAction;\n  } else {\n    soapAction = ((ns.lastIndexOf(\"/\") !== ns.length - 1) ? ns + \"/\" : ns) + name;\n  }\n\n  if (!this.wsdl.options.forceSoap12Headers) {\n    headers.SOAPAction = '\"' + soapAction + '\"';\n  }\n\n  options = options || {};\n\n  //Add extra headers\n  for (const header in this.httpHeaders ) { headers[header] = this.httpHeaders[header];  }\n  for (const attr in extraHeaders) { headers[attr] = extraHeaders[attr]; }\n\n  // Allow the security object to add headers\n  if (self.security && self.security.addHeaders)\n    self.security.addHeaders(headers);\n  if (self.security && self.security.addOptions)\n    self.security.addOptions(options);\n\n  if ((style === 'rpc')&& ( ( input.parts || input.name===\"element\" ) || args === null) ) {\n    assert.ok(!style || style === 'rpc', 'invalid message definition for document style binding');\n    message = self.wsdl.objectToRpcXML(name, args, alias, ns,(input.name!==\"element\" ));\n    (method.inputSoap === 'encoded') && (encoding = 'soap:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" ');\n  } else {\n    assert.ok(!style || style === 'document', 'invalid message definition for rpc style binding');\n    // pass `input.$lookupType` if `input.$type` could not be found\n    message = self.wsdl.objectToDocumentXML(input.$name, args, input.targetNSAlias, input.targetNamespace, (input.$type || input.$lookupType));\n  }\n  xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\" +\n    \"<\" + envelopeKey + \":Envelope \" +\n    xmlnsSoap + \" \" +\n    \"xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \" +\n    encoding +\n    this.wsdl.xmlnsInEnvelope + '>' +\n    ((self.soapHeaders || self.security) ?\n      (\n        \"<\" + envelopeKey + \":Header>\" +\n        (self.soapHeaders ? self.soapHeaders.join(\"\\n\") : \"\") +\n        (self.security && !self.security.postProcess ? self.security.toXML() : \"\") +\n        \"</\" + envelopeKey + \":Header>\"\n      )\n      :\n        ''\n      ) +\n    \"<\" + envelopeKey + \":Body\" +\n    (self.bodyAttributes ? self.bodyAttributes.join(' ') : '') +\n    (self.security && self.security.postProcess ? ' Id=\"_0\"' : '') +\n    \">\" +\n    message +\n    \"</\" + envelopeKey + \":Body>\" +\n    \"</\" + envelopeKey + \":Envelope>\";\n\n  if(self.security && self.security.postProcess){\n    xml = self.security.postProcess(xml, envelopeKey);\n  }\n\n  if(options && options.postProcess){\n    xml = options.postProcess(xml);\n  }\n\n  self.lastMessage = message;\n  self.lastRequest = xml;\n  self.lastEndpoint = location;\n\n  const eid = options.exchangeId || uuid4();\n\n  self.emit('message', message, eid);\n  self.emit('request', xml, eid);\n\n  const tryJSONparse = function(body) {\n    try {\n      return JSON.parse(body);\n    }\n    catch(err) {\n      return undefined;\n    }\n  };\n\n  // if (this.streamAllowed && typeof self.httpClient.requestStream === 'function') {\n  //   callback = _.once(callback);\n  //   const startTime = Date.now();\n  //   req = self.httpClient.requestStream(location, xml, headers, options, self);\n  //   self.lastRequestHeaders = req.headers;\n  //   const onError = function onError(err) {\n  //     self.lastResponse = null;\n  //     self.lastResponseHeaders = null;\n  //     self.lastElapsedTime = null;\n  //     self.emit('response', null, null, eid);\n  //     callback(err, undefined, undefined, undefined, xml);\n  //   };\n  //   req.on('error', onError);\n  //   req.on('response', function (response) {\n  //     response.on('error', onError);\n  //     // When the output element cannot be looked up in the wsdl, play it safe and\n  //     // don't stream\n  //     if(response.statusCode !== 200 || !output || !output.$lookupTypes) {\n  //       console.log(\"TODO! response handling\");\n  //       // response.pipe(concatStream({encoding: 'string'}, function (body) {\n  //       //   self.lastResponse = body;\n  //       //   self.lastResponseHeaders = response && response.headers;\n  //       //   self.lastElapsedTime = Date.now() - startTime;\n  //       //   self.emit('response', body, response, eid);\n  //       //   return parseSync(body, response);\n  //       // }));\n  //       return;\n  //     }\n  //     self.wsdl.xmlToObject(response, function (error, obj) {\n  //       self.lastResponse = response;\n  //       self.lastResponseHeaders = response && response.headers;\n  //       self.lastElapsedTime = Date.now() - startTime;\n  //       self.emit('response', '<stream>', response, eid);\n  //       if (error) {\n  //         error.response = response;\n  //         error.body = '<stream>';\n  //         self.emit('soapError', error, eid);\n  //         return callback(error, response, undefined, undefined, xml);\n  //       }\n  //       return finish(obj, '<stream>', response);\n  //     });\n  //   });\n  //   return;\n  // }\n\n  return (<HttpClient>self.httpClient).post(location, xml, {\n    headers: headers,\n    responseType: 'text', observe: 'response' }).pipe(\n    map((response: HttpResponse<any>) => {\n      self.lastResponse = response.body;\n      self.lastResponseHeaders = response && response.headers;\n      // self.lastElapsedTime = response && response.elapsedTime;\n      self.emit('response', response.body, response, eid);\n      return parseSync(response.body, response)\n    })\n  );\n\n  // req = self.httpClient.request(location, xml, function(err, response, body) {\n  //   self.lastResponse = body;\n  //   self.lastResponseHeaders = response && response.headers;\n  //   self.lastElapsedTime = response && response.elapsedTime;\n  //   self.emit('response', body, response, eid);\n\n  //   if (err) {\n  //     callback(err, undefined, undefined, undefined, xml);\n  //   } else {\n  //     return parseSync(body, response);\n  //   }\n  // }, headers, options, self);\n\n  function parseSync(body, response: HttpResponse<any>) {\n    let obj;\n    try {\n      obj = self.wsdl.xmlToObject(body);\n    } catch (error) {\n      //  When the output element cannot be looked up in the wsdl and the body is JSON\n      //  instead of sending the error, we pass the body in the response.\n      if(!output || !output.$lookupTypes) {\n        // debug('Response element is not present. Unable to convert response xml to json.');\n        //  If the response is JSON then return it as-is.\n        const json = _.isObject(body) ? body : tryJSONparse(body);\n        if (json) {\n          return { err: null, response, responseBody: json, header: undefined, xml } //callback(null, response, json, undefined, xml);\n        }\n      }\n      error.response = response;\n      error.body = body;\n      self.emit('soapError', error, eid);\n      throw error; //callback(error, response, body, undefined, xml);\n    }\n    return finish(obj, body, response);\n  }\n\n  function finish(obj, responseBody, response) {\n    let result = null;\n\n    if (!output){\n      // one-way, no output expected\n      return { err: null, response: null, responseBody, header: obj.Header, xml }; //callback(null, null, body, obj.Header, xml);\n    }\n\n    // If it's not HTML and Soap Body is empty\n    if (!obj.html && !obj.Body) {\n      return  { err: null, obj, responseBody, header: obj.Header, xml }; \n      //callback(null, obj, body, obj.Header);\n    }\n\n    if( typeof obj.Body !== 'object' ) {\n      const error: any = new Error('Cannot parse response');\n      error.response = response;\n      error.body = responseBody;\n      return { err: error, obj, responseBody, header: undefined, xml }; \n      //callback(error, obj, body, undefined, xml);\n    }\n\n    result = obj.Body[output.$name];\n    // RPC/literal response body may contain elements with added suffixes I.E.\n    // 'Response', or 'Output', or 'Out'\n    // This doesn't necessarily equal the ouput message name. See WSDL 1.1 Section 2.4.5\n    if(!result){\n      result = obj.Body[output.$name.replace(/(?:Out(?:put)?|Response)$/, '')];\n    }\n    if (!result) {\n      ['Response', 'Out', 'Output'].forEach(function (term) {\n        if (obj.Body.hasOwnProperty(name + term)) {\n          return result = obj.Body[name + term];\n        }\n      });\n    }\n    \n    return { err: null, result, responseBody, header: obj.Header, xml }; \n    //callback(null, result, body, obj.Header, xml);\n  }\n\n  // // Added mostly for testability, but possibly useful for debugging\n  // if(req && req.headers && !options.ntlm) //fixes an issue when req or req.headers is undefined, doesn't apply to ntlm requests\n  //   self.lastRequestHeaders = req.headers;\n};\n","/*\n * Copyright (c) 2011 Vinay Pulim <vinay@milewise.com>\n * MIT Licensed\n */\n\nimport * as wsdl from './wsdl';\nimport { security } from './security';\nimport { Client } from './client';\nexport { Client } from './client';\nexport { security } from './security';\nexport const WSDL = wsdl.WSDL;\n// export const passwordDigest = utils.passwordDigest;\n\nfunction createCache() {\n  const cache = {};\n  return function (key, load, callback) {\n    if (!cache[key]) {\n      load(function (err, result) {\n        if (err) {\n          return callback(err);\n        }\n        cache[key] = result;\n        callback(null, result);\n      });\n    } else {\n      // process.nextTick(function () {\n      //   callback(null, cache[key]);\n      // });\n      Promise.resolve(true).then(() => callback(null, cache[key]));\n    }\n  };\n}\nconst getFromCache = createCache();\n\nfunction _requestWSDL(url, options) {\n  // if (typeof options === 'function') {\n  //   callback = options;\n  //   options = {};\n  // }\n\n  return wsdl.open_wsdl(url, options);\n\n  // const openWsdl = wsdl.open_wsdl.bind(null, url, options);\n  // if (options.disableCache === true) {\n  //   openWsdl(callback);\n  // } else {\n  //   getFromCache(url, openWsdl, callback);\n  // }\n}\n\nexport async function createClient(url, options, endpoint): Promise<any> {\n  // if (typeof options === 'function') {\n  //   endpoint = callback;\n  //   callback = options;\n  //   options = {};\n  // }\n  if (typeof options === 'undefined') {\n    options = {};\n  }\n  console.log(\"createClient\", options)\n  endpoint = options.endpoint || endpoint;\n  // _requestWSDL(url, options, function(err, wsdl) {\n  //   callback(err, wsdl && new Client(wsdl, endpoint, options));\n  // });\n\n  const wsdl = await _requestWSDL(url, options);\n  const client = new Client(wsdl, endpoint, options);\n  return client;\n}\n\n// export function createClientAsync(url, options, endpoint): Observable<any> {\n//   if (typeof options === 'undefined') {\n//     options = {};\n//   }\n//   console.log(\"createClientAsync\", options)\n//   return createClient(url, options, endpoint);\n// }\n\n// export function listen(server, pathOrOptions, services, xml) {\n//   let options: any = {},\n//     path = pathOrOptions,\n//     uri = '';\n\n//   if (typeof pathOrOptions === 'object') {\n//     options = pathOrOptions;\n//     path = options.path;\n//     services = options.services;\n//     xml = options.xml;\n//     uri = options.uri;\n//   }\n\n//   const wsdl = new WSDL(xml || services, uri, options);\n//   return new Server(server, path, services, wsdl, options);\n// }\n\nexport const BasicAuthSecurity = security.BasicAuthSecurity;\nexport const NTLMSecurity = security.NTLMSecurity;\nexport const WSSecurity = security.WSSecurity;\nexport const WSSecurityCert = security.WSSecurityCert;\nexport const ClientSSLSecurity = security.ClientSSLSecurity;\nexport const ClientSSLSecurityPFX = security.ClientSSLSecurityPFX;\nexport const BearerSecurity = security.BearerSecurity;\n","import { Injectable } from '@angular/core';\nimport { createClient } from './soap/soap';\nimport { HttpClient } from '@angular/common/http';\nimport { Client } from './soap/interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxSoapService {\n\n  constructor(private http: HttpClient) {\n    console.log('ngx-soap service');\n  }\n\n  createClient(wsdlUrl: string, options: any = {}, endpoint?: string): Promise<Client> {\n    options.httpClient = this.http;\n    return createClient(wsdlUrl, options, endpoint) ;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    HttpClientModule\n  ],\n  exports: []\n})\nexport class NgxSoapModule { }\n"]}